import org.gradle.internal.os.OperatingSystem

plugins {
	id "java"
	id "com.gradleup.shadow" version "8.3.6"
}

java {
	withSourcesJar()
}

allprojects {
	apply plugin: "java"

	java {
		sourceCompatibility = "17"
		targetCompatibility = "17"
	}

	repositories {
		mavenCentral()
	}

	project.ext.jomlVersion = "1.10.8"
	project.ext.lwjglVersion = "3.3.6"
	switch (OperatingSystem.current()) {
		case OperatingSystem.LINUX:
			def osArch = System.getProperty("os.arch")
			project.ext.lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
					? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
					: "natives-linux"
			break
		case OperatingSystem.WINDOWS:
			def osArch = System.getProperty("os.arch")
			project.ext.lwjglNatives = osArch.contains("64")
					? "natives-windows${osArch.startsWith("aarch64") ? "-arm64" : ""}"
					: "natives-windows-x86"
			break
		case OperatingSystem.MAC_OS:
			project.ext.lwjglNatives = System.getProperty("os.arch").startsWith("aarch64") ? "natives-macos-arm64" : "natives-macos"
			break
	}
}

dependencies {
	//implementation group: 'it.unimi.dsi', name: 'fastutil', version: '8.5.15'
	implementation files("fastutil/fastutil-mini.jar")

	testImplementation platform("org.junit:junit-bom:5.12.2")
	testImplementation "org.junit.jupiter:junit-jupiter:5.12.2"
	testRuntimeOnly("org.junit.platform:junit-platform-launcher")

	compileOnly platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
	compileOnly "org.lwjgl:lwjgl"
	compileOnly "org.lwjgl:lwjgl-vulkan"
	compileOnly "org.lwjgl:lwjgl-glfw"
	compileOnly "org.lwjgl:lwjgl-vma"
	compileOnly "org.lwjgl:lwjgl-openxr"
	compileOnly "org.joml:joml:${jomlVersion}"

	testImplementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
	testImplementation "org.lwjgl:lwjgl"
	testImplementation "org.lwjgl:lwjgl-vma"
	testImplementation "org.lwjgl:lwjgl-vulkan"
	testImplementation "org.lwjgl:lwjgl-glfw"
	testImplementation "org.joml:joml:${jomlVersion}"

	testRuntimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
	testRuntimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
	testRuntimeOnly "org.lwjgl:lwjgl-vma::$lwjglNatives"
	if (lwjglNatives == "natives-macos") testRuntimeOnly "org.lwjgl:lwjgl-vulkan::$lwjglNatives"

	test {
		useJUnitPlatform()
	}
}
