> Task :samples:com.github.knokko.boiler.samples.HelloTriangle.main()
Thread 0, Frame 0:
vkCreateInstance(pCreateInfo, pAllocator, pInstance) returns VkResult VK_SUCCESS (0):
    pCreateInfo:                    const VkInstanceCreateInfo* = 0x79fb7b3faf00:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO (1)
        pNext:                          const void* = NULL
        flags:                          VkInstanceCreateFlags = 1 (VK_INSTANCE_CREATE_ENUMERATE_PORTABILITY_BIT_KHR)
        pApplicationInfo:               const VkApplicationInfo* = 0x79fb742ee3e0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_APPLICATION_INFO (0)
            pNext:                          const void* = NULL
            pApplicationName:               const char* = "HelloTriangle"
            applicationVersion:             uint32_t = 4096
            pEngineName:                    const char* = "VkBoiler"
            engineVersion:                  uint32_t = 4
            apiVersion:                     uint32_t = 4194304
        enabledLayerCount:              uint32_t = 2
        ppEnabledLayerNames:            const char* const* = 0x79fb742ee0d0
            ppEnabledLayerNames[0]:         const char* const = "VK_LAYER_LUNARG_api_dump"
            ppEnabledLayerNames[1]:         const char* const = "VK_LAYER_KHRONOS_validation"
        enabledExtensionCount:          uint32_t = 8
        ppEnabledExtensionNames:        const char* const* = 0x79fb742ee050
            ppEnabledExtensionNames[0]:     const char* const = "VK_KHR_get_physical_device_properties2"
            ppEnabledExtensionNames[1]:     const char* const = "VK_KHR_get_surface_capabilities2"
            ppEnabledExtensionNames[2]:     const char* const = "VK_KHR_portability_enumeration"
            ppEnabledExtensionNames[3]:     const char* const = "VK_KHR_surface"
            ppEnabledExtensionNames[4]:     const char* const = "VK_KHR_xcb_surface"
            ppEnabledExtensionNames[5]:     const char* const = "VK_EXT_surface_maintenance1"
            ppEnabledExtensionNames[6]:     const char* const = "VK_EXT_debug_utils"
            ppEnabledExtensionNames[7]:     const char* const = "VK_EXT_validation_features"
        pNext:                          const void* = NULL
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pInstance:                      VkInstance* = 0x79fb7454baf0

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0x79fb7454baf0
    pPhysicalDeviceCount:           uint32_t* = 3
    pPhysicalDevices:               VkPhysicalDevice* = NULL

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0x79fb7454baf0
    pPhysicalDeviceCount:           uint32_t* = 3
    pPhysicalDevices:               VkPhysicalDevice* = 0x79fb75061af0
        pPhysicalDevices[0]:            VkPhysicalDevice = 0x79fb7505bf90
        pPhysicalDevices[1]:            VkPhysicalDevice = 0x79fb7505bf70
        pPhysicalDevices[2]:            VkPhysicalDevice = 0x79fb7505bf50

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    pProperties:                    VkPhysicalDeviceProperties* = 0x79fb7b3fddb0:
        apiVersion:                     uint32_t = 4206881
        driverVersion:                  uint32_t = 2371043328
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 5046
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Quadro M1200"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x79fb7b3fdec4
            pipelineCacheUUID[0]:           uint8_t = 131
            pipelineCacheUUID[1]:           uint8_t = 144
            pipelineCacheUUID[2]:           uint8_t = 26
            pipelineCacheUUID[3]:           uint8_t = 69
            pipelineCacheUUID[4]:           uint8_t = 120
            pipelineCacheUUID[5]:           uint8_t = 0
            pipelineCacheUUID[6]:           uint8_t = 126
            pipelineCacheUUID[7]:           uint8_t = 94
            pipelineCacheUUID[8]:           uint8_t = 79
            pipelineCacheUUID[9]:           uint8_t = 103
            pipelineCacheUUID[10]:          uint8_t = 0
            pipelineCacheUUID[11]:          uint8_t = 96
            pipelineCacheUUID[12]:          uint8_t = 64
            pipelineCacheUUID[13]:          uint8_t = 157
            pipelineCacheUUID[14]:          uint8_t = 142
            pipelineCacheUUID[15]:          uint8_t = 93
        limits:                         VkPhysicalDeviceLimits = 0x79fb7b3fded8:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 65536
            sparseAddressSpaceSize:         VkDeviceSize = 1099511627776
            maxBoundDescriptorSets:         uint32_t = 32
            maxPerStageDescriptorSamplers:  uint32_t = 1048576
            maxPerStageDescriptorUniformBuffers: uint32_t = 15
            maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorSampledImages: uint32_t = 1048576
            maxPerStageDescriptorStorageImages: uint32_t = 1048576
            maxPerStageDescriptorInputAttachments: uint32_t = 1048576
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 1048576
            maxDescriptorSetUniformBuffers: uint32_t = 90
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetStorageBuffers: uint32_t = 1048576
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetSampledImages:  uint32_t = 1048576
            maxDescriptorSetStorageImages:  uint32_t = 1048576
            maxDescriptorSetInputAttachments: uint32_t = 1048576
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 4294967295
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 0x79fb7b3fdfb4
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 0x79fb7b3fdfc4
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x79fb7b3fdff0
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x79fb7b3fdff8
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32768
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x79fb7b3fe094
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 2047.94
            lineWidthRange:                 float[2] = 0x79fb7b3fe09c
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 64
            pointSizeGranularity:           float = 0.0625
            lineWidthGranularity:           float = 0.0625
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x79fb7b3fe0d0:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 1
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf70
    pProperties:                    VkPhysicalDeviceProperties* = 0x79fb7b3fddb0:
        apiVersion:                     uint32_t = 4206866
        driverVersion:                  uint32_t = 100663299
        vendorID:                       uint32_t = 32902
        deviceID:                       uint32_t = 22811
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU (1)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Intel(R) HD Graphics 630 (KBL GT2)"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x79fb7b3fdec4
            pipelineCacheUUID[0]:           uint8_t = 187
            pipelineCacheUUID[1]:           uint8_t = 123
            pipelineCacheUUID[2]:           uint8_t = 46
            pipelineCacheUUID[3]:           uint8_t = 83
            pipelineCacheUUID[4]:           uint8_t = 48
            pipelineCacheUUID[5]:           uint8_t = 253
            pipelineCacheUUID[6]:           uint8_t = 254
            pipelineCacheUUID[7]:           uint8_t = 154
            pipelineCacheUUID[8]:           uint8_t = 135
            pipelineCacheUUID[9]:           uint8_t = 159
            pipelineCacheUUID[10]:          uint8_t = 147
            pipelineCacheUUID[11]:          uint8_t = 168
            pipelineCacheUUID[12]:          uint8_t = 183
            pipelineCacheUUID[13]:          uint8_t = 121
            pipelineCacheUUID[14]:          uint8_t = 238
            pipelineCacheUUID[15]:          uint8_t = 213
        limits:                         VkPhysicalDeviceLimits = 0x79fb7b3fded8:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 134217728
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 128
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 65536
            bufferImageGranularity:         VkDeviceSize = 1
            sparseAddressSpaceSize:         VkDeviceSize = 0
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 65535
            maxPerStageDescriptorUniformBuffers: uint32_t = 64
            maxPerStageDescriptorStorageBuffers: uint32_t = 65535
            maxPerStageDescriptorSampledImages: uint32_t = 65535
            maxPerStageDescriptorStorageImages: uint32_t = 65535
            maxPerStageDescriptorInputAttachments: uint32_t = 64
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 393210
            maxDescriptorSetUniformBuffers: uint32_t = 384
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 8
            maxDescriptorSetStorageBuffers: uint32_t = 393210
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
            maxDescriptorSetSampledImages:  uint32_t = 393210
            maxDescriptorSetStorageImages:  uint32_t = 393210
            maxDescriptorSetInputAttachments: uint32_t = 256
            maxVertexInputAttributes:       uint32_t = 29
            maxVertexInputBindings:         uint32_t = 31
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 4095
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 128
            maxTessellationControlTotalOutputComponents: uint32_t = 2048
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 256
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 116
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 131078
            maxComputeSharedMemorySize:     uint32_t = 65536
            maxComputeWorkGroupCount:       uint32_t[3] = 0x79fb7b3fdfb4
                maxComputeWorkGroupCount[0]:    uint32_t = 65535
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1024
            maxComputeWorkGroupSize:        uint32_t[3] = 0x79fb7b3fdfc4
                maxComputeWorkGroupSize[0]:     uint32_t = 1024
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 1024
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 16
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x79fb7b3fdff0
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x79fb7b3fdff8
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32767
            viewportSubPixelBits:           uint32_t = 13
            minMemoryMapAlignment:          size_t = 4096
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 64
            minStorageBufferOffsetAlignment: VkDeviceSize = 4
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 1 (VK_SAMPLE_COUNT_1_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 83.3333
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x79fb7b3fe094
                pointSizeRange[0]:              float = 0.125
                pointSizeRange[1]:              float = 255.875
            lineWidthRange:                 float[2] = 0x79fb7b3fe09c
                lineWidthRange[0]:              float = 0
                lineWidthRange[1]:              float = 8
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.0078125
            strictLines:                    VkBool32 = 0
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 128
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 128
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x79fb7b3fe0d0:
            residencyStandard2DBlockShape:  VkBool32 = 0
            residencyStandard2DMultisampleBlockShape: VkBool32 = 0
            residencyStandard3DBlockShape:  VkBool32 = 0
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf50
    pProperties:                    VkPhysicalDeviceProperties* = 0x79fb7b3fddb0:
        apiVersion:                     uint32_t = 4206866
        driverVersion:                  uint32_t = 1
        vendorID:                       uint32_t = 65541
        deviceID:                       uint32_t = 0
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_CPU (4)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "llvmpipe (LLVM 15.0.7, 256 bits)"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x79fb7b3fdec4
            pipelineCacheUUID[0]:           uint8_t = 50
            pipelineCacheUUID[1]:           uint8_t = 52
            pipelineCacheUUID[2]:           uint8_t = 46
            pipelineCacheUUID[3]:           uint8_t = 48
            pipelineCacheUUID[4]:           uint8_t = 46
            pipelineCacheUUID[5]:           uint8_t = 51
            pipelineCacheUUID[6]:           uint8_t = 45
            pipelineCacheUUID[7]:           uint8_t = 49
            pipelineCacheUUID[8]:           uint8_t = 112
            pipelineCacheUUID[9]:           uint8_t = 111
            pipelineCacheUUID[10]:          uint8_t = 112
            pipelineCacheUUID[11]:          uint8_t = 49
            pipelineCacheUUID[12]:          uint8_t = 126
            pipelineCacheUUID[13]:          uint8_t = 49
            pipelineCacheUUID[14]:          uint8_t = 55
            pipelineCacheUUID[15]:          uint8_t = 49
        limits:                         VkPhysicalDeviceLimits = 0x79fb7b3fded8:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 4096
            maxImageDimensionCube:          uint32_t = 32768
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 134217728
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 32768
            bufferImageGranularity:         VkDeviceSize = 64
            sparseAddressSpaceSize:         VkDeviceSize = 0
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 1000000
            maxPerStageDescriptorUniformBuffers: uint32_t = 1000000
            maxPerStageDescriptorStorageBuffers: uint32_t = 1000000
            maxPerStageDescriptorSampledImages: uint32_t = 1000000
            maxPerStageDescriptorStorageImages: uint32_t = 1000000
            maxPerStageDescriptorInputAttachments: uint32_t = 1000000
            maxPerStageResources:           uint32_t = 1000000
            maxDescriptorSetSamplers:       uint32_t = 1000000
            maxDescriptorSetUniformBuffers: uint32_t = 1000000
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 1000000
            maxDescriptorSetStorageBuffers: uint32_t = 1000000
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 1000000
            maxDescriptorSetSampledImages:  uint32_t = 1000000
            maxDescriptorSetStorageImages:  uint32_t = 1000000
            maxDescriptorSetInputAttachments: uint32_t = 1000000
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 128
            maxTessellationControlTotalOutputComponents: uint32_t = 4096
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 64
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 2
            maxFragmentCombinedOutputResources: uint32_t = 104
            maxComputeSharedMemorySize:     uint32_t = 32768
            maxComputeWorkGroupCount:       uint32_t[3] = 0x79fb7b3fdfb4
                maxComputeWorkGroupCount[0]:    uint32_t = 65535
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1024
            maxComputeWorkGroupSize:        uint32_t[3] = 0x79fb7b3fdfc4
                maxComputeWorkGroupSize[0]:     uint32_t = 1024
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 1024
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 4
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 16
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x79fb7b3fdff0
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x79fb7b3fdff8
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32768
            viewportSubPixelBits:           uint32_t = 0
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 16
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -32
            maxTexelOffset:                 uint32_t = 31
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -2
            maxInterpolationOffset:         float = 2
            subPixelInterpolationOffsetBits: uint32_t = 8
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x79fb7b3fe094
                pointSizeRange[0]:              float = 0
                pointSizeRange[1]:              float = 255
            lineWidthRange:                 float[2] = 0x79fb7b3fe09c
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 255
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.0078125
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 128
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 128
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x79fb7b3fe0d0:
            residencyStandard2DBlockShape:  VkBool32 = 0
            residencyStandard2DMultisampleBlockShape: VkBool32 = 0
            residencyStandard3DBlockShape:  VkBool32 = 0
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0x79fb7454baf0
    pPhysicalDeviceCount:           uint32_t* = 3
    pPhysicalDevices:               VkPhysicalDevice* = NULL

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0x79fb7454baf0
    pPhysicalDeviceCount:           uint32_t* = 3
    pPhysicalDevices:               VkPhysicalDevice* = 0x79fb7505d830
        pPhysicalDevices[0]:            VkPhysicalDevice = 0x79fb7505bf90
        pPhysicalDevices[1]:            VkPhysicalDevice = 0x79fb7505bf70
        pPhysicalDevices[2]:            VkPhysicalDevice = 0x79fb7505bf50

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    pProperties:                    VkPhysicalDeviceProperties* = 0x79fb7b3fddb0:
        apiVersion:                     uint32_t = 4206881
        driverVersion:                  uint32_t = 2371043328
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 5046
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Quadro M1200"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x79fb7b3fdec4
            pipelineCacheUUID[0]:           uint8_t = 131
            pipelineCacheUUID[1]:           uint8_t = 144
            pipelineCacheUUID[2]:           uint8_t = 26
            pipelineCacheUUID[3]:           uint8_t = 69
            pipelineCacheUUID[4]:           uint8_t = 120
            pipelineCacheUUID[5]:           uint8_t = 0
            pipelineCacheUUID[6]:           uint8_t = 126
            pipelineCacheUUID[7]:           uint8_t = 94
            pipelineCacheUUID[8]:           uint8_t = 79
            pipelineCacheUUID[9]:           uint8_t = 103
            pipelineCacheUUID[10]:          uint8_t = 0
            pipelineCacheUUID[11]:          uint8_t = 96
            pipelineCacheUUID[12]:          uint8_t = 64
            pipelineCacheUUID[13]:          uint8_t = 157
            pipelineCacheUUID[14]:          uint8_t = 142
            pipelineCacheUUID[15]:          uint8_t = 93
        limits:                         VkPhysicalDeviceLimits = 0x79fb7b3fded8:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 65536
            sparseAddressSpaceSize:         VkDeviceSize = 1099511627776
            maxBoundDescriptorSets:         uint32_t = 32
            maxPerStageDescriptorSamplers:  uint32_t = 1048576
            maxPerStageDescriptorUniformBuffers: uint32_t = 15
            maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorSampledImages: uint32_t = 1048576
            maxPerStageDescriptorStorageImages: uint32_t = 1048576
            maxPerStageDescriptorInputAttachments: uint32_t = 1048576
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 1048576
            maxDescriptorSetUniformBuffers: uint32_t = 90
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetStorageBuffers: uint32_t = 1048576
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetSampledImages:  uint32_t = 1048576
            maxDescriptorSetStorageImages:  uint32_t = 1048576
            maxDescriptorSetInputAttachments: uint32_t = 1048576
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 4294967295
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 0x79fb7b3fdfb4
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 0x79fb7b3fdfc4
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x79fb7b3fdff0
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x79fb7b3fdff8
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32768
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x79fb7b3fe094
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 2047.94
            lineWidthRange:                 float[2] = 0x79fb7b3fe09c
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 64
            pointSizeGranularity:           float = 0.0625
            lineWidthGranularity:           float = 0.0625
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x79fb7b3fe0d0:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 1
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf70
    pProperties:                    VkPhysicalDeviceProperties* = 0x79fb7b3fddb0:
        apiVersion:                     uint32_t = 4206866
        driverVersion:                  uint32_t = 100663299
        vendorID:                       uint32_t = 32902
        deviceID:                       uint32_t = 22811
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU (1)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Intel(R) HD Graphics 630 (KBL GT2)"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x79fb7b3fdec4
            pipelineCacheUUID[0]:           uint8_t = 187
            pipelineCacheUUID[1]:           uint8_t = 123
            pipelineCacheUUID[2]:           uint8_t = 46
            pipelineCacheUUID[3]:           uint8_t = 83
            pipelineCacheUUID[4]:           uint8_t = 48
            pipelineCacheUUID[5]:           uint8_t = 253
            pipelineCacheUUID[6]:           uint8_t = 254
            pipelineCacheUUID[7]:           uint8_t = 154
            pipelineCacheUUID[8]:           uint8_t = 135
            pipelineCacheUUID[9]:           uint8_t = 159
            pipelineCacheUUID[10]:          uint8_t = 147
            pipelineCacheUUID[11]:          uint8_t = 168
            pipelineCacheUUID[12]:          uint8_t = 183
            pipelineCacheUUID[13]:          uint8_t = 121
            pipelineCacheUUID[14]:          uint8_t = 238
            pipelineCacheUUID[15]:          uint8_t = 213
        limits:                         VkPhysicalDeviceLimits = 0x79fb7b3fded8:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 134217728
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 128
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 65536
            bufferImageGranularity:         VkDeviceSize = 1
            sparseAddressSpaceSize:         VkDeviceSize = 0
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 65535
            maxPerStageDescriptorUniformBuffers: uint32_t = 64
            maxPerStageDescriptorStorageBuffers: uint32_t = 65535
            maxPerStageDescriptorSampledImages: uint32_t = 65535
            maxPerStageDescriptorStorageImages: uint32_t = 65535
            maxPerStageDescriptorInputAttachments: uint32_t = 64
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 393210
            maxDescriptorSetUniformBuffers: uint32_t = 384
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 8
            maxDescriptorSetStorageBuffers: uint32_t = 393210
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
            maxDescriptorSetSampledImages:  uint32_t = 393210
            maxDescriptorSetStorageImages:  uint32_t = 393210
            maxDescriptorSetInputAttachments: uint32_t = 256
            maxVertexInputAttributes:       uint32_t = 29
            maxVertexInputBindings:         uint32_t = 31
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 4095
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 128
            maxTessellationControlTotalOutputComponents: uint32_t = 2048
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 256
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 116
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 131078
            maxComputeSharedMemorySize:     uint32_t = 65536
            maxComputeWorkGroupCount:       uint32_t[3] = 0x79fb7b3fdfb4
                maxComputeWorkGroupCount[0]:    uint32_t = 65535
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1024
            maxComputeWorkGroupSize:        uint32_t[3] = 0x79fb7b3fdfc4
                maxComputeWorkGroupSize[0]:     uint32_t = 1024
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 1024
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 16
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x79fb7b3fdff0
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x79fb7b3fdff8
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32767
            viewportSubPixelBits:           uint32_t = 13
            minMemoryMapAlignment:          size_t = 4096
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 64
            minStorageBufferOffsetAlignment: VkDeviceSize = 4
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 1 (VK_SAMPLE_COUNT_1_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 83.3333
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x79fb7b3fe094
                pointSizeRange[0]:              float = 0.125
                pointSizeRange[1]:              float = 255.875
            lineWidthRange:                 float[2] = 0x79fb7b3fe09c
                lineWidthRange[0]:              float = 0
                lineWidthRange[1]:              float = 8
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.0078125
            strictLines:                    VkBool32 = 0
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 128
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 128
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x79fb7b3fe0d0:
            residencyStandard2DBlockShape:  VkBool32 = 0
            residencyStandard2DMultisampleBlockShape: VkBool32 = 0
            residencyStandard3DBlockShape:  VkBool32 = 0
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf50
    pProperties:                    VkPhysicalDeviceProperties* = 0x79fb7b3fddb0:
        apiVersion:                     uint32_t = 4206866
        driverVersion:                  uint32_t = 1
        vendorID:                       uint32_t = 65541
        deviceID:                       uint32_t = 0
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_CPU (4)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "llvmpipe (LLVM 15.0.7, 256 bits)"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x79fb7b3fdec4
            pipelineCacheUUID[0]:           uint8_t = 50
            pipelineCacheUUID[1]:           uint8_t = 52
            pipelineCacheUUID[2]:           uint8_t = 46
            pipelineCacheUUID[3]:           uint8_t = 48
            pipelineCacheUUID[4]:           uint8_t = 46
            pipelineCacheUUID[5]:           uint8_t = 51
            pipelineCacheUUID[6]:           uint8_t = 45
            pipelineCacheUUID[7]:           uint8_t = 49
            pipelineCacheUUID[8]:           uint8_t = 112
            pipelineCacheUUID[9]:           uint8_t = 111
            pipelineCacheUUID[10]:          uint8_t = 112
            pipelineCacheUUID[11]:          uint8_t = 49
            pipelineCacheUUID[12]:          uint8_t = 126
            pipelineCacheUUID[13]:          uint8_t = 49
            pipelineCacheUUID[14]:          uint8_t = 55
            pipelineCacheUUID[15]:          uint8_t = 49
        limits:                         VkPhysicalDeviceLimits = 0x79fb7b3fded8:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 4096
            maxImageDimensionCube:          uint32_t = 32768
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 134217728
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 32768
            bufferImageGranularity:         VkDeviceSize = 64
            sparseAddressSpaceSize:         VkDeviceSize = 0
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 1000000
            maxPerStageDescriptorUniformBuffers: uint32_t = 1000000
            maxPerStageDescriptorStorageBuffers: uint32_t = 1000000
            maxPerStageDescriptorSampledImages: uint32_t = 1000000
            maxPerStageDescriptorStorageImages: uint32_t = 1000000
            maxPerStageDescriptorInputAttachments: uint32_t = 1000000
            maxPerStageResources:           uint32_t = 1000000
            maxDescriptorSetSamplers:       uint32_t = 1000000
            maxDescriptorSetUniformBuffers: uint32_t = 1000000
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 1000000
            maxDescriptorSetStorageBuffers: uint32_t = 1000000
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 1000000
            maxDescriptorSetSampledImages:  uint32_t = 1000000
            maxDescriptorSetStorageImages:  uint32_t = 1000000
            maxDescriptorSetInputAttachments: uint32_t = 1000000
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 128
            maxTessellationControlTotalOutputComponents: uint32_t = 4096
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 64
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 2
            maxFragmentCombinedOutputResources: uint32_t = 104
            maxComputeSharedMemorySize:     uint32_t = 32768
            maxComputeWorkGroupCount:       uint32_t[3] = 0x79fb7b3fdfb4
                maxComputeWorkGroupCount[0]:    uint32_t = 65535
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1024
            maxComputeWorkGroupSize:        uint32_t[3] = 0x79fb7b3fdfc4
                maxComputeWorkGroupSize[0]:     uint32_t = 1024
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 1024
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 4
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 16
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x79fb7b3fdff0
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x79fb7b3fdff8
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32768
            viewportSubPixelBits:           uint32_t = 0
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 16
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -32
            maxTexelOffset:                 uint32_t = 31
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -2
            maxInterpolationOffset:         float = 2
            subPixelInterpolationOffsetBits: uint32_t = 8
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x79fb7b3fe094
                pointSizeRange[0]:              float = 0
                pointSizeRange[1]:              float = 255
            lineWidthRange:                 float[2] = 0x79fb7b3fe09c
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 255
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.0078125
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 128
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 128
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x79fb7b3fe0d0:
            residencyStandard2DBlockShape:  VkBool32 = 0
            residencyStandard2DMultisampleBlockShape: VkBool32 = 0
            residencyStandard3DBlockShape:  VkBool32 = 0
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkCreateDebugUtilsMessengerEXT(instance, pCreateInfo, pAllocator, pMessenger) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0x79fb7454baf0
    pCreateInfo:                    const VkDebugUtilsMessengerCreateInfoEXT* = 0x79fb742ee3e0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT (1000128004)
        pNext:                          const void* = NULL
        flags:                          VkDebugUtilsMessengerCreateFlagsEXT = 0
        messageSeverity:                VkDebugUtilsMessageSeverityFlagsEXT = 4352 (VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT | VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT)
        messageType:                    VkDebugUtilsMessageTypeFlagsEXT = 2 (VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT)
        pfnUserCallback:                PFN_vkDebugUtilsMessengerCallbackEXT = 1
        pUserData:                      void* = NULL
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMessenger:                     VkDebugUtilsMessengerEXT* = 0xfd5b260000000001

Thread 0, Frame 0:
vkCreateXcbSurfaceKHR(instance, pCreateInfo, pAllocator, pSurface) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0x79fb7454baf0
    pCreateInfo:                    const VkXcbSurfaceCreateInfoKHR* = 0x79fb7b3fdf20:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR (1000005000)
        pNext:                          const void* = NULL
        flags:                          VkXcbSurfaceCreateFlagsKHR = 0
        connection:                     xcb_connection_t* = 0x79fb74354a30
        window:                         xcb_window_t = 65011723
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSurface:                       VkSurfaceKHR* = 0xfab64d0000000002

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0x79fb7454baf0
    pPhysicalDeviceCount:           uint32_t* = 3
    pPhysicalDevices:               VkPhysicalDevice* = NULL

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0x79fb7454baf0
    pPhysicalDeviceCount:           uint32_t* = 3
    pPhysicalDevices:               VkPhysicalDevice* = 0x79fb7506e200
        pPhysicalDevices[0]:            VkPhysicalDevice = 0x79fb7505bf90
        pPhysicalDevices[1]:            VkPhysicalDevice = 0x79fb7505bf70
        pPhysicalDevices[2]:            VkPhysicalDevice = 0x79fb7505bf50

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    pProperties:                    VkPhysicalDeviceProperties* = 0x79fb7b3fde20:
        apiVersion:                     uint32_t = 4206881
        driverVersion:                  uint32_t = 2371043328
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 5046
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Quadro M1200"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x79fb7b3fdf34
            pipelineCacheUUID[0]:           uint8_t = 131
            pipelineCacheUUID[1]:           uint8_t = 144
            pipelineCacheUUID[2]:           uint8_t = 26
            pipelineCacheUUID[3]:           uint8_t = 69
            pipelineCacheUUID[4]:           uint8_t = 120
            pipelineCacheUUID[5]:           uint8_t = 0
            pipelineCacheUUID[6]:           uint8_t = 126
            pipelineCacheUUID[7]:           uint8_t = 94
            pipelineCacheUUID[8]:           uint8_t = 79
            pipelineCacheUUID[9]:           uint8_t = 103
            pipelineCacheUUID[10]:          uint8_t = 0
            pipelineCacheUUID[11]:          uint8_t = 96
            pipelineCacheUUID[12]:          uint8_t = 64
            pipelineCacheUUID[13]:          uint8_t = 157
            pipelineCacheUUID[14]:          uint8_t = 142
            pipelineCacheUUID[15]:          uint8_t = 93
        limits:                         VkPhysicalDeviceLimits = 0x79fb7b3fdf48:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 65536
            sparseAddressSpaceSize:         VkDeviceSize = 1099511627776
            maxBoundDescriptorSets:         uint32_t = 32
            maxPerStageDescriptorSamplers:  uint32_t = 1048576
            maxPerStageDescriptorUniformBuffers: uint32_t = 15
            maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorSampledImages: uint32_t = 1048576
            maxPerStageDescriptorStorageImages: uint32_t = 1048576
            maxPerStageDescriptorInputAttachments: uint32_t = 1048576
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 1048576
            maxDescriptorSetUniformBuffers: uint32_t = 90
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetStorageBuffers: uint32_t = 1048576
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetSampledImages:  uint32_t = 1048576
            maxDescriptorSetStorageImages:  uint32_t = 1048576
            maxDescriptorSetInputAttachments: uint32_t = 1048576
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 4294967295
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 0x79fb7b3fe024
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 0x79fb7b3fe034
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x79fb7b3fe060
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x79fb7b3fe068
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32768
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x79fb7b3fe104
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 2047.94
            lineWidthRange:                 float[2] = 0x79fb7b3fe10c
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 64
            pointSizeGranularity:           float = 0.0625
            lineWidthGranularity:           float = 0.0625
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x79fb7b3fe140:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 1
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf70
    pProperties:                    VkPhysicalDeviceProperties* = 0x79fb7b3fde20:
        apiVersion:                     uint32_t = 4206866
        driverVersion:                  uint32_t = 100663299
        vendorID:                       uint32_t = 32902
        deviceID:                       uint32_t = 22811
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU (1)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Intel(R) HD Graphics 630 (KBL GT2)"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x79fb7b3fdf34
            pipelineCacheUUID[0]:           uint8_t = 187
            pipelineCacheUUID[1]:           uint8_t = 123
            pipelineCacheUUID[2]:           uint8_t = 46
            pipelineCacheUUID[3]:           uint8_t = 83
            pipelineCacheUUID[4]:           uint8_t = 48
            pipelineCacheUUID[5]:           uint8_t = 253
            pipelineCacheUUID[6]:           uint8_t = 254
            pipelineCacheUUID[7]:           uint8_t = 154
            pipelineCacheUUID[8]:           uint8_t = 135
            pipelineCacheUUID[9]:           uint8_t = 159
            pipelineCacheUUID[10]:          uint8_t = 147
            pipelineCacheUUID[11]:          uint8_t = 168
            pipelineCacheUUID[12]:          uint8_t = 183
            pipelineCacheUUID[13]:          uint8_t = 121
            pipelineCacheUUID[14]:          uint8_t = 238
            pipelineCacheUUID[15]:          uint8_t = 213
        limits:                         VkPhysicalDeviceLimits = 0x79fb7b3fdf48:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 134217728
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 128
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 65536
            bufferImageGranularity:         VkDeviceSize = 1
            sparseAddressSpaceSize:         VkDeviceSize = 0
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 65535
            maxPerStageDescriptorUniformBuffers: uint32_t = 64
            maxPerStageDescriptorStorageBuffers: uint32_t = 65535
            maxPerStageDescriptorSampledImages: uint32_t = 65535
            maxPerStageDescriptorStorageImages: uint32_t = 65535
            maxPerStageDescriptorInputAttachments: uint32_t = 64
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 393210
            maxDescriptorSetUniformBuffers: uint32_t = 384
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 8
            maxDescriptorSetStorageBuffers: uint32_t = 393210
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
            maxDescriptorSetSampledImages:  uint32_t = 393210
            maxDescriptorSetStorageImages:  uint32_t = 393210
            maxDescriptorSetInputAttachments: uint32_t = 256
            maxVertexInputAttributes:       uint32_t = 29
            maxVertexInputBindings:         uint32_t = 31
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 4095
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 128
            maxTessellationControlTotalOutputComponents: uint32_t = 2048
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 256
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 116
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 131078
            maxComputeSharedMemorySize:     uint32_t = 65536
            maxComputeWorkGroupCount:       uint32_t[3] = 0x79fb7b3fe024
                maxComputeWorkGroupCount[0]:    uint32_t = 65535
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1024
            maxComputeWorkGroupSize:        uint32_t[3] = 0x79fb7b3fe034
                maxComputeWorkGroupSize[0]:     uint32_t = 1024
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 1024
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 16
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x79fb7b3fe060
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x79fb7b3fe068
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32767
            viewportSubPixelBits:           uint32_t = 13
            minMemoryMapAlignment:          size_t = 4096
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 64
            minStorageBufferOffsetAlignment: VkDeviceSize = 4
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 1 (VK_SAMPLE_COUNT_1_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 83.3333
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x79fb7b3fe104
                pointSizeRange[0]:              float = 0.125
                pointSizeRange[1]:              float = 255.875
            lineWidthRange:                 float[2] = 0x79fb7b3fe10c
                lineWidthRange[0]:              float = 0
                lineWidthRange[1]:              float = 8
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.0078125
            strictLines:                    VkBool32 = 0
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 128
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 128
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x79fb7b3fe140:
            residencyStandard2DBlockShape:  VkBool32 = 0
            residencyStandard2DMultisampleBlockShape: VkBool32 = 0
            residencyStandard3DBlockShape:  VkBool32 = 0
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf50
    pProperties:                    VkPhysicalDeviceProperties* = 0x79fb7b3fde20:
        apiVersion:                     uint32_t = 4206866
        driverVersion:                  uint32_t = 1
        vendorID:                       uint32_t = 65541
        deviceID:                       uint32_t = 0
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_CPU (4)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "llvmpipe (LLVM 15.0.7, 256 bits)"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x79fb7b3fdf34
            pipelineCacheUUID[0]:           uint8_t = 50
            pipelineCacheUUID[1]:           uint8_t = 52
            pipelineCacheUUID[2]:           uint8_t = 46
            pipelineCacheUUID[3]:           uint8_t = 48
            pipelineCacheUUID[4]:           uint8_t = 46
            pipelineCacheUUID[5]:           uint8_t = 51
            pipelineCacheUUID[6]:           uint8_t = 45
            pipelineCacheUUID[7]:           uint8_t = 49
            pipelineCacheUUID[8]:           uint8_t = 112
            pipelineCacheUUID[9]:           uint8_t = 111
            pipelineCacheUUID[10]:          uint8_t = 112
            pipelineCacheUUID[11]:          uint8_t = 49
            pipelineCacheUUID[12]:          uint8_t = 126
            pipelineCacheUUID[13]:          uint8_t = 49
            pipelineCacheUUID[14]:          uint8_t = 55
            pipelineCacheUUID[15]:          uint8_t = 49
        limits:                         VkPhysicalDeviceLimits = 0x79fb7b3fdf48:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 4096
            maxImageDimensionCube:          uint32_t = 32768
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 134217728
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 32768
            bufferImageGranularity:         VkDeviceSize = 64
            sparseAddressSpaceSize:         VkDeviceSize = 0
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 1000000
            maxPerStageDescriptorUniformBuffers: uint32_t = 1000000
            maxPerStageDescriptorStorageBuffers: uint32_t = 1000000
            maxPerStageDescriptorSampledImages: uint32_t = 1000000
            maxPerStageDescriptorStorageImages: uint32_t = 1000000
            maxPerStageDescriptorInputAttachments: uint32_t = 1000000
            maxPerStageResources:           uint32_t = 1000000
            maxDescriptorSetSamplers:       uint32_t = 1000000
            maxDescriptorSetUniformBuffers: uint32_t = 1000000
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 1000000
            maxDescriptorSetStorageBuffers: uint32_t = 1000000
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 1000000
            maxDescriptorSetSampledImages:  uint32_t = 1000000
            maxDescriptorSetStorageImages:  uint32_t = 1000000
            maxDescriptorSetInputAttachments: uint32_t = 1000000
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 128
            maxTessellationControlTotalOutputComponents: uint32_t = 4096
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 64
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 2
            maxFragmentCombinedOutputResources: uint32_t = 104
            maxComputeSharedMemorySize:     uint32_t = 32768
            maxComputeWorkGroupCount:       uint32_t[3] = 0x79fb7b3fe024
                maxComputeWorkGroupCount[0]:    uint32_t = 65535
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1024
            maxComputeWorkGroupSize:        uint32_t[3] = 0x79fb7b3fe034
                maxComputeWorkGroupSize[0]:     uint32_t = 1024
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 1024
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 4
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 16
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x79fb7b3fe060
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x79fb7b3fe068
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32768
            viewportSubPixelBits:           uint32_t = 0
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 16
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -32
            maxTexelOffset:                 uint32_t = 31
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -2
            maxInterpolationOffset:         float = 2
            subPixelInterpolationOffsetBits: uint32_t = 8
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x79fb7b3fe104
                pointSizeRange[0]:              float = 0
                pointSizeRange[1]:              float = 255
            lineWidthRange:                 float[2] = 0x79fb7b3fe10c
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 255
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.0078125
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 128
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 128
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x79fb7b3fe140:
            residencyStandard2DBlockShape:  VkBool32 = 0
            residencyStandard2DMultisampleBlockShape: VkBool32 = 0
            residencyStandard3DBlockShape:  VkBool32 = 0
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0x79fb7454baf0
    pPhysicalDeviceCount:           uint32_t* = 3
    pPhysicalDevices:               VkPhysicalDevice* = NULL

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0x79fb7454baf0
    pPhysicalDeviceCount:           uint32_t* = 3
    pPhysicalDevices:               VkPhysicalDevice* = 0x79fb7506e240
        pPhysicalDevices[0]:            VkPhysicalDevice = 0x79fb7505bf90
        pPhysicalDevices[1]:            VkPhysicalDevice = 0x79fb7505bf70
        pPhysicalDevices[2]:            VkPhysicalDevice = 0x79fb7505bf50

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    pProperties:                    VkPhysicalDeviceProperties* = 0x79fb7b3fde20:
        apiVersion:                     uint32_t = 4206881
        driverVersion:                  uint32_t = 2371043328
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 5046
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Quadro M1200"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x79fb7b3fdf34
            pipelineCacheUUID[0]:           uint8_t = 131
            pipelineCacheUUID[1]:           uint8_t = 144
            pipelineCacheUUID[2]:           uint8_t = 26
            pipelineCacheUUID[3]:           uint8_t = 69
            pipelineCacheUUID[4]:           uint8_t = 120
            pipelineCacheUUID[5]:           uint8_t = 0
            pipelineCacheUUID[6]:           uint8_t = 126
            pipelineCacheUUID[7]:           uint8_t = 94
            pipelineCacheUUID[8]:           uint8_t = 79
            pipelineCacheUUID[9]:           uint8_t = 103
            pipelineCacheUUID[10]:          uint8_t = 0
            pipelineCacheUUID[11]:          uint8_t = 96
            pipelineCacheUUID[12]:          uint8_t = 64
            pipelineCacheUUID[13]:          uint8_t = 157
            pipelineCacheUUID[14]:          uint8_t = 142
            pipelineCacheUUID[15]:          uint8_t = 93
        limits:                         VkPhysicalDeviceLimits = 0x79fb7b3fdf48:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 65536
            sparseAddressSpaceSize:         VkDeviceSize = 1099511627776
            maxBoundDescriptorSets:         uint32_t = 32
            maxPerStageDescriptorSamplers:  uint32_t = 1048576
            maxPerStageDescriptorUniformBuffers: uint32_t = 15
            maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorSampledImages: uint32_t = 1048576
            maxPerStageDescriptorStorageImages: uint32_t = 1048576
            maxPerStageDescriptorInputAttachments: uint32_t = 1048576
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 1048576
            maxDescriptorSetUniformBuffers: uint32_t = 90
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetStorageBuffers: uint32_t = 1048576
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetSampledImages:  uint32_t = 1048576
            maxDescriptorSetStorageImages:  uint32_t = 1048576
            maxDescriptorSetInputAttachments: uint32_t = 1048576
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 4294967295
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 0x79fb7b3fe024
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 0x79fb7b3fe034
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x79fb7b3fe060
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x79fb7b3fe068
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32768
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x79fb7b3fe104
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 2047.94
            lineWidthRange:                 float[2] = 0x79fb7b3fe10c
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 64
            pointSizeGranularity:           float = 0.0625
            lineWidthGranularity:           float = 0.0625
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x79fb7b3fe140:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 1
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf70
    pProperties:                    VkPhysicalDeviceProperties* = 0x79fb7b3fde20:
        apiVersion:                     uint32_t = 4206866
        driverVersion:                  uint32_t = 100663299
        vendorID:                       uint32_t = 32902
        deviceID:                       uint32_t = 22811
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU (1)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Intel(R) HD Graphics 630 (KBL GT2)"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x79fb7b3fdf34
            pipelineCacheUUID[0]:           uint8_t = 187
            pipelineCacheUUID[1]:           uint8_t = 123
            pipelineCacheUUID[2]:           uint8_t = 46
            pipelineCacheUUID[3]:           uint8_t = 83
            pipelineCacheUUID[4]:           uint8_t = 48
            pipelineCacheUUID[5]:           uint8_t = 253
            pipelineCacheUUID[6]:           uint8_t = 254
            pipelineCacheUUID[7]:           uint8_t = 154
            pipelineCacheUUID[8]:           uint8_t = 135
            pipelineCacheUUID[9]:           uint8_t = 159
            pipelineCacheUUID[10]:          uint8_t = 147
            pipelineCacheUUID[11]:          uint8_t = 168
            pipelineCacheUUID[12]:          uint8_t = 183
            pipelineCacheUUID[13]:          uint8_t = 121
            pipelineCacheUUID[14]:          uint8_t = 238
            pipelineCacheUUID[15]:          uint8_t = 213
        limits:                         VkPhysicalDeviceLimits = 0x79fb7b3fdf48:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 134217728
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 128
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 65536
            bufferImageGranularity:         VkDeviceSize = 1
            sparseAddressSpaceSize:         VkDeviceSize = 0
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 65535
            maxPerStageDescriptorUniformBuffers: uint32_t = 64
            maxPerStageDescriptorStorageBuffers: uint32_t = 65535
            maxPerStageDescriptorSampledImages: uint32_t = 65535
            maxPerStageDescriptorStorageImages: uint32_t = 65535
            maxPerStageDescriptorInputAttachments: uint32_t = 64
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 393210
            maxDescriptorSetUniformBuffers: uint32_t = 384
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 8
            maxDescriptorSetStorageBuffers: uint32_t = 393210
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
            maxDescriptorSetSampledImages:  uint32_t = 393210
            maxDescriptorSetStorageImages:  uint32_t = 393210
            maxDescriptorSetInputAttachments: uint32_t = 256
            maxVertexInputAttributes:       uint32_t = 29
            maxVertexInputBindings:         uint32_t = 31
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 4095
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 128
            maxTessellationControlTotalOutputComponents: uint32_t = 2048
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 256
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 116
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 131078
            maxComputeSharedMemorySize:     uint32_t = 65536
            maxComputeWorkGroupCount:       uint32_t[3] = 0x79fb7b3fe024
                maxComputeWorkGroupCount[0]:    uint32_t = 65535
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1024
            maxComputeWorkGroupSize:        uint32_t[3] = 0x79fb7b3fe034
                maxComputeWorkGroupSize[0]:     uint32_t = 1024
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 1024
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 16
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x79fb7b3fe060
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x79fb7b3fe068
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32767
            viewportSubPixelBits:           uint32_t = 13
            minMemoryMapAlignment:          size_t = 4096
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 64
            minStorageBufferOffsetAlignment: VkDeviceSize = 4
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 1 (VK_SAMPLE_COUNT_1_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 83.3333
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x79fb7b3fe104
                pointSizeRange[0]:              float = 0.125
                pointSizeRange[1]:              float = 255.875
            lineWidthRange:                 float[2] = 0x79fb7b3fe10c
                lineWidthRange[0]:              float = 0
                lineWidthRange[1]:              float = 8
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.0078125
            strictLines:                    VkBool32 = 0
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 128
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 128
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x79fb7b3fe140:
            residencyStandard2DBlockShape:  VkBool32 = 0
            residencyStandard2DMultisampleBlockShape: VkBool32 = 0
            residencyStandard3DBlockShape:  VkBool32 = 0
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf50
    pProperties:                    VkPhysicalDeviceProperties* = 0x79fb7b3fde20:
        apiVersion:                     uint32_t = 4206866
        driverVersion:                  uint32_t = 1
        vendorID:                       uint32_t = 65541
        deviceID:                       uint32_t = 0
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_CPU (4)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "llvmpipe (LLVM 15.0.7, 256 bits)"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x79fb7b3fdf34
            pipelineCacheUUID[0]:           uint8_t = 50
            pipelineCacheUUID[1]:           uint8_t = 52
            pipelineCacheUUID[2]:           uint8_t = 46
            pipelineCacheUUID[3]:           uint8_t = 48
            pipelineCacheUUID[4]:           uint8_t = 46
            pipelineCacheUUID[5]:           uint8_t = 51
            pipelineCacheUUID[6]:           uint8_t = 45
            pipelineCacheUUID[7]:           uint8_t = 49
            pipelineCacheUUID[8]:           uint8_t = 112
            pipelineCacheUUID[9]:           uint8_t = 111
            pipelineCacheUUID[10]:          uint8_t = 112
            pipelineCacheUUID[11]:          uint8_t = 49
            pipelineCacheUUID[12]:          uint8_t = 126
            pipelineCacheUUID[13]:          uint8_t = 49
            pipelineCacheUUID[14]:          uint8_t = 55
            pipelineCacheUUID[15]:          uint8_t = 49
        limits:                         VkPhysicalDeviceLimits = 0x79fb7b3fdf48:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 4096
            maxImageDimensionCube:          uint32_t = 32768
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 134217728
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 32768
            bufferImageGranularity:         VkDeviceSize = 64
            sparseAddressSpaceSize:         VkDeviceSize = 0
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 1000000
            maxPerStageDescriptorUniformBuffers: uint32_t = 1000000
            maxPerStageDescriptorStorageBuffers: uint32_t = 1000000
            maxPerStageDescriptorSampledImages: uint32_t = 1000000
            maxPerStageDescriptorStorageImages: uint32_t = 1000000
            maxPerStageDescriptorInputAttachments: uint32_t = 1000000
            maxPerStageResources:           uint32_t = 1000000
            maxDescriptorSetSamplers:       uint32_t = 1000000
            maxDescriptorSetUniformBuffers: uint32_t = 1000000
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 1000000
            maxDescriptorSetStorageBuffers: uint32_t = 1000000
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 1000000
            maxDescriptorSetSampledImages:  uint32_t = 1000000
            maxDescriptorSetStorageImages:  uint32_t = 1000000
            maxDescriptorSetInputAttachments: uint32_t = 1000000
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 128
            maxTessellationControlTotalOutputComponents: uint32_t = 4096
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 64
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 2
            maxFragmentCombinedOutputResources: uint32_t = 104
            maxComputeSharedMemorySize:     uint32_t = 32768
            maxComputeWorkGroupCount:       uint32_t[3] = 0x79fb7b3fe024
                maxComputeWorkGroupCount[0]:    uint32_t = 65535
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1024
            maxComputeWorkGroupSize:        uint32_t[3] = 0x79fb7b3fe034
                maxComputeWorkGroupSize[0]:     uint32_t = 1024
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 1024
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 4
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 16
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x79fb7b3fe060
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x79fb7b3fe068
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32768
            viewportSubPixelBits:           uint32_t = 0
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 16
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -32
            maxTexelOffset:                 uint32_t = 31
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -2
            maxInterpolationOffset:         float = 2
            subPixelInterpolationOffsetBits: uint32_t = 8
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x79fb7b3fe104
                pointSizeRange[0]:              float = 0
                pointSizeRange[1]:              float = 255
            lineWidthRange:                 float[2] = 0x79fb7b3fe10c
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 255
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.0078125
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 128
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 128
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x79fb7b3fe140:
            residencyStandard2DBlockShape:  VkBool32 = 0
            residencyStandard2DMultisampleBlockShape: VkBool32 = 0
            residencyStandard3DBlockShape:  VkBool32 = 0
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf70
    pProperties:                    VkPhysicalDeviceProperties* = 0x79fb742ee0b0:
        apiVersion:                     uint32_t = 4206866
        driverVersion:                  uint32_t = 100663299
        vendorID:                       uint32_t = 32902
        deviceID:                       uint32_t = 22811
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU (1)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Intel(R) HD Graphics 630 (KBL GT2)"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x79fb742ee1c4
            pipelineCacheUUID[0]:           uint8_t = 187
            pipelineCacheUUID[1]:           uint8_t = 123
            pipelineCacheUUID[2]:           uint8_t = 46
            pipelineCacheUUID[3]:           uint8_t = 83
            pipelineCacheUUID[4]:           uint8_t = 48
            pipelineCacheUUID[5]:           uint8_t = 253
            pipelineCacheUUID[6]:           uint8_t = 254
            pipelineCacheUUID[7]:           uint8_t = 154
            pipelineCacheUUID[8]:           uint8_t = 135
            pipelineCacheUUID[9]:           uint8_t = 159
            pipelineCacheUUID[10]:          uint8_t = 147
            pipelineCacheUUID[11]:          uint8_t = 168
            pipelineCacheUUID[12]:          uint8_t = 183
            pipelineCacheUUID[13]:          uint8_t = 121
            pipelineCacheUUID[14]:          uint8_t = 238
            pipelineCacheUUID[15]:          uint8_t = 213
        limits:                         VkPhysicalDeviceLimits = 0x79fb742ee1d8:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 134217728
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 128
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 65536
            bufferImageGranularity:         VkDeviceSize = 1
            sparseAddressSpaceSize:         VkDeviceSize = 0
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 65535
            maxPerStageDescriptorUniformBuffers: uint32_t = 64
            maxPerStageDescriptorStorageBuffers: uint32_t = 65535
            maxPerStageDescriptorSampledImages: uint32_t = 65535
            maxPerStageDescriptorStorageImages: uint32_t = 65535
            maxPerStageDescriptorInputAttachments: uint32_t = 64
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 393210
            maxDescriptorSetUniformBuffers: uint32_t = 384
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 8
            maxDescriptorSetStorageBuffers: uint32_t = 393210
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
            maxDescriptorSetSampledImages:  uint32_t = 393210
            maxDescriptorSetStorageImages:  uint32_t = 393210
            maxDescriptorSetInputAttachments: uint32_t = 256
            maxVertexInputAttributes:       uint32_t = 29
            maxVertexInputBindings:         uint32_t = 31
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 4095
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 128
            maxTessellationControlTotalOutputComponents: uint32_t = 2048
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 256
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 116
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 131078
            maxComputeSharedMemorySize:     uint32_t = 65536
            maxComputeWorkGroupCount:       uint32_t[3] = 0x79fb742ee2b4
                maxComputeWorkGroupCount[0]:    uint32_t = 65535
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1024
            maxComputeWorkGroupSize:        uint32_t[3] = 0x79fb742ee2c4
                maxComputeWorkGroupSize[0]:     uint32_t = 1024
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 1024
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 16
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x79fb742ee2f0
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x79fb742ee2f8
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32767
            viewportSubPixelBits:           uint32_t = 13
            minMemoryMapAlignment:          size_t = 4096
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 64
            minStorageBufferOffsetAlignment: VkDeviceSize = 4
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 1 (VK_SAMPLE_COUNT_1_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 83.3333
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x79fb742ee394
                pointSizeRange[0]:              float = 0.125
                pointSizeRange[1]:              float = 255.875
            lineWidthRange:                 float[2] = 0x79fb742ee39c
                lineWidthRange[0]:              float = 0
                lineWidthRange[1]:              float = 8
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.0078125
            strictLines:                    VkBool32 = 0
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 128
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 128
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x79fb742ee3d0:
            residencyStandard2DBlockShape:  VkBool32 = 0
            residencyStandard2DMultisampleBlockShape: VkBool32 = 0
            residencyStandard3DBlockShape:  VkBool32 = 0
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf70
    pQueueFamilyPropertyCount:      uint32_t* = 1
    pQueueFamilyProperties:         VkQueueFamilyProperties* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf70
    pQueueFamilyPropertyCount:      uint32_t* = 1
    pQueueFamilyProperties:         VkQueueFamilyProperties* = 0x79fb742ee094
        pQueueFamilyProperties[0]:      VkQueueFamilyProperties = 0x79fb742ee094:
            queueFlags:                     VkQueueFlags = 7 (VK_QUEUE_GRAPHICS_BIT | VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT)
            queueCount:                     uint32_t = 1
            timestampValidBits:             uint32_t = 36
            minImageTransferGranularity:    VkExtent3D = 0x79fb742ee0a0:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, queueFamilyIndex, surface, pSupported) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf70
    queueFamilyIndex:               uint32_t = 0
    surface:                        VkSurfaceKHR = 0xfab64d0000000002
    pSupported:                     VkBool32* = 1

BasicDeviceFilter: accepted Intel(R) HD Graphics 630 (KBL GT2)
Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    pProperties:                    VkPhysicalDeviceProperties* = 0x79fb742edd58:
        apiVersion:                     uint32_t = 4206881
        driverVersion:                  uint32_t = 2371043328
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 5046
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Quadro M1200"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x79fb742ede6c
            pipelineCacheUUID[0]:           uint8_t = 131
            pipelineCacheUUID[1]:           uint8_t = 144
            pipelineCacheUUID[2]:           uint8_t = 26
            pipelineCacheUUID[3]:           uint8_t = 69
            pipelineCacheUUID[4]:           uint8_t = 120
            pipelineCacheUUID[5]:           uint8_t = 0
            pipelineCacheUUID[6]:           uint8_t = 126
            pipelineCacheUUID[7]:           uint8_t = 94
            pipelineCacheUUID[8]:           uint8_t = 79
            pipelineCacheUUID[9]:           uint8_t = 103
            pipelineCacheUUID[10]:          uint8_t = 0
            pipelineCacheUUID[11]:          uint8_t = 96
            pipelineCacheUUID[12]:          uint8_t = 64
            pipelineCacheUUID[13]:          uint8_t = 157
            pipelineCacheUUID[14]:          uint8_t = 142
            pipelineCacheUUID[15]:          uint8_t = 93
        limits:                         VkPhysicalDeviceLimits = 0x79fb742ede80:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 65536
            sparseAddressSpaceSize:         VkDeviceSize = 1099511627776
            maxBoundDescriptorSets:         uint32_t = 32
            maxPerStageDescriptorSamplers:  uint32_t = 1048576
            maxPerStageDescriptorUniformBuffers: uint32_t = 15
            maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorSampledImages: uint32_t = 1048576
            maxPerStageDescriptorStorageImages: uint32_t = 1048576
            maxPerStageDescriptorInputAttachments: uint32_t = 1048576
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 1048576
            maxDescriptorSetUniformBuffers: uint32_t = 90
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetStorageBuffers: uint32_t = 1048576
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetSampledImages:  uint32_t = 1048576
            maxDescriptorSetStorageImages:  uint32_t = 1048576
            maxDescriptorSetInputAttachments: uint32_t = 1048576
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 4294967295
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 0x79fb742edf5c
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 0x79fb742edf6c
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x79fb742edf98
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x79fb742edfa0
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32768
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x79fb742ee03c
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 2047.94
            lineWidthRange:                 float[2] = 0x79fb742ee044
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 64
            pointSizeGranularity:           float = 0.0625
            lineWidthGranularity:           float = 0.0625
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x79fb742ee078:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 1
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    pQueueFamilyPropertyCount:      uint32_t* = 3
    pQueueFamilyProperties:         VkQueueFamilyProperties* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    pQueueFamilyPropertyCount:      uint32_t* = 3
    pQueueFamilyProperties:         VkQueueFamilyProperties* = 0x79fb742edd0c
        pQueueFamilyProperties[0]:      VkQueueFamilyProperties = 0x79fb742edd0c:
            queueFlags:                     VkQueueFlags = 15 (VK_QUEUE_GRAPHICS_BIT | VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:                     uint32_t = 16
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 0x79fb742edd18:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1
        pQueueFamilyProperties[1]:      VkQueueFamilyProperties = 0x79fb742edd24:
            queueFlags:                     VkQueueFlags = 12 (VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:                     uint32_t = 1
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 0x79fb742edd30:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1
        pQueueFamilyProperties[2]:      VkQueueFamilyProperties = 0x79fb742edd3c:
            queueFlags:                     VkQueueFlags = 44 (VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT | VK_QUEUE_VIDEO_DECODE_BIT_KHR)
            queueCount:                     uint32_t = 1
            timestampValidBits:             uint32_t = 32
            minImageTransferGranularity:    VkExtent3D = 0x79fb742edd48:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, queueFamilyIndex, surface, pSupported) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    queueFamilyIndex:               uint32_t = 0
    surface:                        VkSurfaceKHR = 0xfab64d0000000002
    pSupported:                     VkBool32* = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, queueFamilyIndex, surface, pSupported) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    queueFamilyIndex:               uint32_t = 1
    surface:                        VkSurfaceKHR = 0xfab64d0000000002
    pSupported:                     VkBool32* = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, queueFamilyIndex, surface, pSupported) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    queueFamilyIndex:               uint32_t = 2
    surface:                        VkSurfaceKHR = 0xfab64d0000000002
    pSupported:                     VkBool32* = 0

BasicDeviceFilter: accepted Quadro M1200
Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf50
    pProperties:                    VkPhysicalDeviceProperties* = 0x79fb742ed9d0:
        apiVersion:                     uint32_t = 4206866
        driverVersion:                  uint32_t = 1
        vendorID:                       uint32_t = 65541
        deviceID:                       uint32_t = 0
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_CPU (4)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "llvmpipe (LLVM 15.0.7, 256 bits)"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x79fb742edae4
            pipelineCacheUUID[0]:           uint8_t = 50
            pipelineCacheUUID[1]:           uint8_t = 52
            pipelineCacheUUID[2]:           uint8_t = 46
            pipelineCacheUUID[3]:           uint8_t = 48
            pipelineCacheUUID[4]:           uint8_t = 46
            pipelineCacheUUID[5]:           uint8_t = 51
            pipelineCacheUUID[6]:           uint8_t = 45
            pipelineCacheUUID[7]:           uint8_t = 49
            pipelineCacheUUID[8]:           uint8_t = 112
            pipelineCacheUUID[9]:           uint8_t = 111
            pipelineCacheUUID[10]:          uint8_t = 112
            pipelineCacheUUID[11]:          uint8_t = 49
            pipelineCacheUUID[12]:          uint8_t = 126
            pipelineCacheUUID[13]:          uint8_t = 49
            pipelineCacheUUID[14]:          uint8_t = 55
            pipelineCacheUUID[15]:          uint8_t = 49
        limits:                         VkPhysicalDeviceLimits = 0x79fb742edaf8:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 4096
            maxImageDimensionCube:          uint32_t = 32768
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 134217728
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 32768
            bufferImageGranularity:         VkDeviceSize = 64
            sparseAddressSpaceSize:         VkDeviceSize = 0
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 1000000
            maxPerStageDescriptorUniformBuffers: uint32_t = 1000000
            maxPerStageDescriptorStorageBuffers: uint32_t = 1000000
            maxPerStageDescriptorSampledImages: uint32_t = 1000000
            maxPerStageDescriptorStorageImages: uint32_t = 1000000
            maxPerStageDescriptorInputAttachments: uint32_t = 1000000
            maxPerStageResources:           uint32_t = 1000000
            maxDescriptorSetSamplers:       uint32_t = 1000000
            maxDescriptorSetUniformBuffers: uint32_t = 1000000
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 1000000
            maxDescriptorSetStorageBuffers: uint32_t = 1000000
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 1000000
            maxDescriptorSetSampledImages:  uint32_t = 1000000
            maxDescriptorSetStorageImages:  uint32_t = 1000000
            maxDescriptorSetInputAttachments: uint32_t = 1000000
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 128
            maxTessellationControlTotalOutputComponents: uint32_t = 4096
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 64
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 2
            maxFragmentCombinedOutputResources: uint32_t = 104
            maxComputeSharedMemorySize:     uint32_t = 32768
            maxComputeWorkGroupCount:       uint32_t[3] = 0x79fb742edbd4
                maxComputeWorkGroupCount[0]:    uint32_t = 65535
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1024
            maxComputeWorkGroupSize:        uint32_t[3] = 0x79fb742edbe4
                maxComputeWorkGroupSize[0]:     uint32_t = 1024
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 1024
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 4
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 16
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x79fb742edc10
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x79fb742edc18
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32768
            viewportSubPixelBits:           uint32_t = 0
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 16
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -32
            maxTexelOffset:                 uint32_t = 31
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -2
            maxInterpolationOffset:         float = 2
            subPixelInterpolationOffsetBits: uint32_t = 8
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x79fb742edcb4
                pointSizeRange[0]:              float = 0
                pointSizeRange[1]:              float = 255
            lineWidthRange:                 float[2] = 0x79fb742edcbc
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 255
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.0078125
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 128
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 128
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x79fb742edcf0:
            residencyStandard2DBlockShape:  VkBool32 = 0
            residencyStandard2DMultisampleBlockShape: VkBool32 = 0
            residencyStandard3DBlockShape:  VkBool32 = 0
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf50
    pQueueFamilyPropertyCount:      uint32_t* = 1
    pQueueFamilyProperties:         VkQueueFamilyProperties* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf50
    pQueueFamilyPropertyCount:      uint32_t* = 1
    pQueueFamilyProperties:         VkQueueFamilyProperties* = 0x79fb742ed9b4
        pQueueFamilyProperties[0]:      VkQueueFamilyProperties = 0x79fb742ed9b4:
            queueFlags:                     VkQueueFlags = 7 (VK_QUEUE_GRAPHICS_BIT | VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT)
            queueCount:                     uint32_t = 1
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 0x79fb742ed9c0:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, queueFamilyIndex, surface, pSupported) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf50
    queueFamilyIndex:               uint32_t = 0
    surface:                        VkSurfaceKHR = 0xfab64d0000000002
    pSupported:                     VkBool32* = 1

BasicDeviceFilter: accepted llvmpipe (LLVM 15.0.7, 256 bits)
Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf70
    pProperties:                    VkPhysicalDeviceProperties* = 0x79fb742ee0d0:
        apiVersion:                     uint32_t = 4206866
        driverVersion:                  uint32_t = 100663299
        vendorID:                       uint32_t = 32902
        deviceID:                       uint32_t = 22811
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU (1)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Intel(R) HD Graphics 630 (KBL GT2)"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x79fb742ee1e4
            pipelineCacheUUID[0]:           uint8_t = 187
            pipelineCacheUUID[1]:           uint8_t = 123
            pipelineCacheUUID[2]:           uint8_t = 46
            pipelineCacheUUID[3]:           uint8_t = 83
            pipelineCacheUUID[4]:           uint8_t = 48
            pipelineCacheUUID[5]:           uint8_t = 253
            pipelineCacheUUID[6]:           uint8_t = 254
            pipelineCacheUUID[7]:           uint8_t = 154
            pipelineCacheUUID[8]:           uint8_t = 135
            pipelineCacheUUID[9]:           uint8_t = 159
            pipelineCacheUUID[10]:          uint8_t = 147
            pipelineCacheUUID[11]:          uint8_t = 168
            pipelineCacheUUID[12]:          uint8_t = 183
            pipelineCacheUUID[13]:          uint8_t = 121
            pipelineCacheUUID[14]:          uint8_t = 238
            pipelineCacheUUID[15]:          uint8_t = 213
        limits:                         VkPhysicalDeviceLimits = 0x79fb742ee1f8:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 134217728
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 128
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 65536
            bufferImageGranularity:         VkDeviceSize = 1
            sparseAddressSpaceSize:         VkDeviceSize = 0
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 65535
            maxPerStageDescriptorUniformBuffers: uint32_t = 64
            maxPerStageDescriptorStorageBuffers: uint32_t = 65535
            maxPerStageDescriptorSampledImages: uint32_t = 65535
            maxPerStageDescriptorStorageImages: uint32_t = 65535
            maxPerStageDescriptorInputAttachments: uint32_t = 64
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 393210
            maxDescriptorSetUniformBuffers: uint32_t = 384
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 8
            maxDescriptorSetStorageBuffers: uint32_t = 393210
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
            maxDescriptorSetSampledImages:  uint32_t = 393210
            maxDescriptorSetStorageImages:  uint32_t = 393210
            maxDescriptorSetInputAttachments: uint32_t = 256
            maxVertexInputAttributes:       uint32_t = 29
            maxVertexInputBindings:         uint32_t = 31
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 4095
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 128
            maxTessellationControlTotalOutputComponents: uint32_t = 2048
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 256
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 116
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 131078
            maxComputeSharedMemorySize:     uint32_t = 65536
            maxComputeWorkGroupCount:       uint32_t[3] = 0x79fb742ee2d4
                maxComputeWorkGroupCount[0]:    uint32_t = 65535
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1024
            maxComputeWorkGroupSize:        uint32_t[3] = 0x79fb742ee2e4
                maxComputeWorkGroupSize[0]:     uint32_t = 1024
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 1024
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 16
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x79fb742ee310
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x79fb742ee318
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32767
            viewportSubPixelBits:           uint32_t = 13
            minMemoryMapAlignment:          size_t = 4096
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 64
            minStorageBufferOffsetAlignment: VkDeviceSize = 4
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 1 (VK_SAMPLE_COUNT_1_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 83.3333
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x79fb742ee3b4
                pointSizeRange[0]:              float = 0.125
                pointSizeRange[1]:              float = 255.875
            lineWidthRange:                 float[2] = 0x79fb742ee3bc
                lineWidthRange[0]:              float = 0
                lineWidthRange[1]:              float = 8
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.0078125
            strictLines:                    VkBool32 = 0
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 128
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 128
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x79fb742ee3f0:
            residencyStandard2DBlockShape:  VkBool32 = 0
            residencyStandard2DMultisampleBlockShape: VkBool32 = 0
            residencyStandard3DBlockShape:  VkBool32 = 0
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    pProperties:                    VkPhysicalDeviceProperties* = 0x79fb742ee0d0:
        apiVersion:                     uint32_t = 4206881
        driverVersion:                  uint32_t = 2371043328
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 5046
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Quadro M1200"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x79fb742ee1e4
            pipelineCacheUUID[0]:           uint8_t = 131
            pipelineCacheUUID[1]:           uint8_t = 144
            pipelineCacheUUID[2]:           uint8_t = 26
            pipelineCacheUUID[3]:           uint8_t = 69
            pipelineCacheUUID[4]:           uint8_t = 120
            pipelineCacheUUID[5]:           uint8_t = 0
            pipelineCacheUUID[6]:           uint8_t = 126
            pipelineCacheUUID[7]:           uint8_t = 94
            pipelineCacheUUID[8]:           uint8_t = 79
            pipelineCacheUUID[9]:           uint8_t = 103
            pipelineCacheUUID[10]:          uint8_t = 0
            pipelineCacheUUID[11]:          uint8_t = 96
            pipelineCacheUUID[12]:          uint8_t = 64
            pipelineCacheUUID[13]:          uint8_t = 157
            pipelineCacheUUID[14]:          uint8_t = 142
            pipelineCacheUUID[15]:          uint8_t = 93
        limits:                         VkPhysicalDeviceLimits = 0x79fb742ee1f8:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 65536
            sparseAddressSpaceSize:         VkDeviceSize = 1099511627776
            maxBoundDescriptorSets:         uint32_t = 32
            maxPerStageDescriptorSamplers:  uint32_t = 1048576
            maxPerStageDescriptorUniformBuffers: uint32_t = 15
            maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorSampledImages: uint32_t = 1048576
            maxPerStageDescriptorStorageImages: uint32_t = 1048576
            maxPerStageDescriptorInputAttachments: uint32_t = 1048576
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 1048576
            maxDescriptorSetUniformBuffers: uint32_t = 90
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetStorageBuffers: uint32_t = 1048576
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetSampledImages:  uint32_t = 1048576
            maxDescriptorSetStorageImages:  uint32_t = 1048576
            maxDescriptorSetInputAttachments: uint32_t = 1048576
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 4294967295
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 0x79fb742ee2d4
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 0x79fb742ee2e4
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x79fb742ee310
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x79fb742ee318
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32768
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x79fb742ee3b4
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 2047.94
            lineWidthRange:                 float[2] = 0x79fb742ee3bc
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 64
            pointSizeGranularity:           float = 0.0625
            lineWidthGranularity:           float = 0.0625
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x79fb742ee3f0:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 1
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf50
    pProperties:                    VkPhysicalDeviceProperties* = 0x79fb742ee0d0:
        apiVersion:                     uint32_t = 4206866
        driverVersion:                  uint32_t = 1
        vendorID:                       uint32_t = 65541
        deviceID:                       uint32_t = 0
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_CPU (4)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "llvmpipe (LLVM 15.0.7, 256 bits)"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x79fb742ee1e4
            pipelineCacheUUID[0]:           uint8_t = 50
            pipelineCacheUUID[1]:           uint8_t = 52
            pipelineCacheUUID[2]:           uint8_t = 46
            pipelineCacheUUID[3]:           uint8_t = 48
            pipelineCacheUUID[4]:           uint8_t = 46
            pipelineCacheUUID[5]:           uint8_t = 51
            pipelineCacheUUID[6]:           uint8_t = 45
            pipelineCacheUUID[7]:           uint8_t = 49
            pipelineCacheUUID[8]:           uint8_t = 112
            pipelineCacheUUID[9]:           uint8_t = 111
            pipelineCacheUUID[10]:          uint8_t = 112
            pipelineCacheUUID[11]:          uint8_t = 49
            pipelineCacheUUID[12]:          uint8_t = 126
            pipelineCacheUUID[13]:          uint8_t = 49
            pipelineCacheUUID[14]:          uint8_t = 55
            pipelineCacheUUID[15]:          uint8_t = 49
        limits:                         VkPhysicalDeviceLimits = 0x79fb742ee1f8:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 4096
            maxImageDimensionCube:          uint32_t = 32768
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 134217728
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 32768
            bufferImageGranularity:         VkDeviceSize = 64
            sparseAddressSpaceSize:         VkDeviceSize = 0
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 1000000
            maxPerStageDescriptorUniformBuffers: uint32_t = 1000000
            maxPerStageDescriptorStorageBuffers: uint32_t = 1000000
            maxPerStageDescriptorSampledImages: uint32_t = 1000000
            maxPerStageDescriptorStorageImages: uint32_t = 1000000
            maxPerStageDescriptorInputAttachments: uint32_t = 1000000
            maxPerStageResources:           uint32_t = 1000000
            maxDescriptorSetSamplers:       uint32_t = 1000000
            maxDescriptorSetUniformBuffers: uint32_t = 1000000
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 1000000
            maxDescriptorSetStorageBuffers: uint32_t = 1000000
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 1000000
            maxDescriptorSetSampledImages:  uint32_t = 1000000
            maxDescriptorSetStorageImages:  uint32_t = 1000000
            maxDescriptorSetInputAttachments: uint32_t = 1000000
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 128
            maxTessellationControlTotalOutputComponents: uint32_t = 4096
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 64
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 2
            maxFragmentCombinedOutputResources: uint32_t = 104
            maxComputeSharedMemorySize:     uint32_t = 32768
            maxComputeWorkGroupCount:       uint32_t[3] = 0x79fb742ee2d4
                maxComputeWorkGroupCount[0]:    uint32_t = 65535
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1024
            maxComputeWorkGroupSize:        uint32_t[3] = 0x79fb742ee2e4
                maxComputeWorkGroupSize[0]:     uint32_t = 1024
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 1024
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 4
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 16
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x79fb742ee310
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x79fb742ee318
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32768
            viewportSubPixelBits:           uint32_t = 0
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 16
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -32
            maxTexelOffset:                 uint32_t = 31
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -2
            maxInterpolationOffset:         float = 2
            subPixelInterpolationOffsetBits: uint32_t = 8
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 5 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_4_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x79fb742ee3b4
                pointSizeRange[0]:              float = 0
                pointSizeRange[1]:              float = 255
            lineWidthRange:                 float[2] = 0x79fb742ee3bc
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 255
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.0078125
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 128
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 128
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x79fb742ee3f0:
            residencyStandard2DBlockShape:  VkBool32 = 0
            residencyStandard2DMultisampleBlockShape: VkBool32 = 0
            residencyStandard3DBlockShape:  VkBool32 = 0
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    pQueueFamilyPropertyCount:      uint32_t* = 3
    pQueueFamilyProperties:         VkQueueFamilyProperties* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    pQueueFamilyPropertyCount:      uint32_t* = 3
    pQueueFamilyProperties:         VkQueueFamilyProperties* = 0x79fb742ee2e8
        pQueueFamilyProperties[0]:      VkQueueFamilyProperties = 0x79fb742ee2e8:
            queueFlags:                     VkQueueFlags = 15 (VK_QUEUE_GRAPHICS_BIT | VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:                     uint32_t = 16
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 0x79fb742ee2f4:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1
        pQueueFamilyProperties[1]:      VkQueueFamilyProperties = 0x79fb742ee300:
            queueFlags:                     VkQueueFlags = 12 (VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:                     uint32_t = 1
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 0x79fb742ee30c:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1
        pQueueFamilyProperties[2]:      VkQueueFamilyProperties = 0x79fb742ee318:
            queueFlags:                     VkQueueFlags = 44 (VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT | VK_QUEUE_VIDEO_DECODE_BIT_KHR)
            queueCount:                     uint32_t = 1
            timestampValidBits:             uint32_t = 32
            minImageTransferGranularity:    VkExtent3D = 0x79fb742ee324:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, queueFamilyIndex, surface, pSupported) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    queueFamilyIndex:               uint32_t = 0
    surface:                        VkSurfaceKHR = 0xfab64d0000000002
    pSupported:                     VkBool32* = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, queueFamilyIndex, surface, pSupported) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    queueFamilyIndex:               uint32_t = 1
    surface:                        VkSurfaceKHR = 0xfab64d0000000002
    pSupported:                     VkBool32* = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, queueFamilyIndex, surface, pSupported) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    queueFamilyIndex:               uint32_t = 2
    surface:                        VkSurfaceKHR = 0xfab64d0000000002
    pSupported:                     VkBool32* = 0

Thread 0, Frame 0:
vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, pDevice) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    pCreateInfo:                    const VkDeviceCreateInfo* = 0x79fb7b3fe140:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO (3)
        pNext:                          const void* = NULL
        flags:                          VkDeviceCreateFlags = 0
        queueCreateInfoCount:           uint32_t = 1
        pQueueCreateInfos:              const VkDeviceQueueCreateInfo* = 0x79fb742ee2b8
            pQueueCreateInfos[0]:           const VkDeviceQueueCreateInfo = 0x79fb742ee2b8:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO (2)
                pNext:                          const void* = NULL
                flags:                          VkDeviceQueueCreateFlags = 0
                queueFamilyIndex:               uint32_t = 0
                queueCount:                     uint32_t = 1
                pQueuePriorities:               const float* = 0x79fb742ee2b4
                    pQueuePriorities[0]:            const float = 1
        enabledLayerCount:              uint32_t = 0
        ppEnabledLayerNames:            const char* const* = NULL
        enabledExtensionCount:          uint32_t = 6
        ppEnabledExtensionNames:        const char* const* = 0x79fb742ee238
            ppEnabledExtensionNames[0]:     const char* const = "VK_KHR_swapchain"
            ppEnabledExtensionNames[1]:     const char* const = "VK_EXT_swapchain_maintenance1"
            ppEnabledExtensionNames[2]:     const char* const = "VK_KHR_get_memory_requirements2"
            ppEnabledExtensionNames[3]:     const char* const = "VK_EXT_memory_budget"
            ppEnabledExtensionNames[4]:     const char* const = "VK_KHR_dedicated_allocation"
            ppEnabledExtensionNames[5]:     const char* const = "VK_KHR_bind_memory2"
        pEnabledFeatures:               const VkPhysicalDeviceFeatures* = 0x79fb742ee334:
            robustBufferAccess:             VkBool32 = 0
            fullDrawIndexUint32:            VkBool32 = 0
            imageCubeArray:                 VkBool32 = 0
            independentBlend:               VkBool32 = 0
            geometryShader:                 VkBool32 = 0
            tessellationShader:             VkBool32 = 0
            sampleRateShading:              VkBool32 = 0
            dualSrcBlend:                   VkBool32 = 0
            logicOp:                        VkBool32 = 0
            multiDrawIndirect:              VkBool32 = 0
            drawIndirectFirstInstance:      VkBool32 = 0
            depthClamp:                     VkBool32 = 0
            depthBiasClamp:                 VkBool32 = 0
            fillModeNonSolid:               VkBool32 = 0
            depthBounds:                    VkBool32 = 0
            wideLines:                      VkBool32 = 0
            largePoints:                    VkBool32 = 0
            alphaToOne:                     VkBool32 = 0
            multiViewport:                  VkBool32 = 0
            samplerAnisotropy:              VkBool32 = 0
            textureCompressionETC2:         VkBool32 = 0
            textureCompressionASTC_LDR:     VkBool32 = 0
            textureCompressionBC:           VkBool32 = 0
            occlusionQueryPrecise:          VkBool32 = 0
            pipelineStatisticsQuery:        VkBool32 = 0
            vertexPipelineStoresAndAtomics: VkBool32 = 0
            fragmentStoresAndAtomics:       VkBool32 = 0
            shaderTessellationAndGeometryPointSize: VkBool32 = 0
            shaderImageGatherExtended:      VkBool32 = 0
            shaderStorageImageExtendedFormats: VkBool32 = 0
            shaderStorageImageMultisample:  VkBool32 = 0
            shaderStorageImageReadWithoutFormat: VkBool32 = 0
            shaderStorageImageWriteWithoutFormat: VkBool32 = 0
            shaderUniformBufferArrayDynamicIndexing: VkBool32 = 0
            shaderSampledImageArrayDynamicIndexing: VkBool32 = 0
            shaderStorageBufferArrayDynamicIndexing: VkBool32 = 0
            shaderStorageImageArrayDynamicIndexing: VkBool32 = 0
            shaderClipDistance:             VkBool32 = 0
            shaderCullDistance:             VkBool32 = 0
            shaderFloat64:                  VkBool32 = 0
            shaderInt64:                    VkBool32 = 0
            shaderInt16:                    VkBool32 = 0
            shaderResourceResidency:        VkBool32 = 0
            shaderResourceMinLod:           VkBool32 = 0
            sparseBinding:                  VkBool32 = 0
            sparseResidencyBuffer:          VkBool32 = 0
            sparseResidencyImage2D:         VkBool32 = 0
            sparseResidencyImage3D:         VkBool32 = 0
            sparseResidency2Samples:        VkBool32 = 0
            sparseResidency4Samples:        VkBool32 = 0
            sparseResidency8Samples:        VkBool32 = 0
            sparseResidency16Samples:       VkBool32 = 0
            sparseResidencyAliased:         VkBool32 = 0
            variableMultisampleRate:        VkBool32 = 0
            inheritedQueries:               VkBool32 = 0
        pNext:                          const void* = NULL
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pDevice:                        VkDevice* = 0x79fb751e6620

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    pProperties:                    VkPhysicalDeviceProperties* = 0x79fb742ede50:
        apiVersion:                     uint32_t = 4206881
        driverVersion:                  uint32_t = 2371043328
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 5046
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Quadro M1200"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x79fb742edf64
            pipelineCacheUUID[0]:           uint8_t = 131
            pipelineCacheUUID[1]:           uint8_t = 144
            pipelineCacheUUID[2]:           uint8_t = 26
            pipelineCacheUUID[3]:           uint8_t = 69
            pipelineCacheUUID[4]:           uint8_t = 120
            pipelineCacheUUID[5]:           uint8_t = 0
            pipelineCacheUUID[6]:           uint8_t = 126
            pipelineCacheUUID[7]:           uint8_t = 94
            pipelineCacheUUID[8]:           uint8_t = 79
            pipelineCacheUUID[9]:           uint8_t = 103
            pipelineCacheUUID[10]:          uint8_t = 0
            pipelineCacheUUID[11]:          uint8_t = 96
            pipelineCacheUUID[12]:          uint8_t = 64
            pipelineCacheUUID[13]:          uint8_t = 157
            pipelineCacheUUID[14]:          uint8_t = 142
            pipelineCacheUUID[15]:          uint8_t = 93
        limits:                         VkPhysicalDeviceLimits = 0x79fb742edf78:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 65536
            sparseAddressSpaceSize:         VkDeviceSize = 1099511627776
            maxBoundDescriptorSets:         uint32_t = 32
            maxPerStageDescriptorSamplers:  uint32_t = 1048576
            maxPerStageDescriptorUniformBuffers: uint32_t = 15
            maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorSampledImages: uint32_t = 1048576
            maxPerStageDescriptorStorageImages: uint32_t = 1048576
            maxPerStageDescriptorInputAttachments: uint32_t = 1048576
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 1048576
            maxDescriptorSetUniformBuffers: uint32_t = 90
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetStorageBuffers: uint32_t = 1048576
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetSampledImages:  uint32_t = 1048576
            maxDescriptorSetStorageImages:  uint32_t = 1048576
            maxDescriptorSetInputAttachments: uint32_t = 1048576
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 4294967295
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 0x79fb742ee054
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 0x79fb742ee064
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x79fb742ee090
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x79fb742ee098
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32768
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x79fb742ee134
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 2047.94
            lineWidthRange:                 float[2] = 0x79fb742ee13c
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 64
            pointSizeGranularity:           float = 0.0625
            lineWidthGranularity:           float = 0.0625
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x79fb742ee170:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 1
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetDeviceQueue(device, queueFamilyIndex, queueIndex, pQueue) returns void:
    device:                         VkDevice = 0x79fb751e6620
    queueFamilyIndex:               uint32_t = 0
    queueIndex:                     uint32_t = 0
    pQueue:                         VkQueue* = 0x79fb752d5570

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    pProperties:                    VkPhysicalDeviceProperties* = 0x79fb753782e0:
        apiVersion:                     uint32_t = 4206881
        driverVersion:                  uint32_t = 2371043328
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 5046
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Quadro M1200"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x79fb753783f4
            pipelineCacheUUID[0]:           uint8_t = 131
            pipelineCacheUUID[1]:           uint8_t = 144
            pipelineCacheUUID[2]:           uint8_t = 26
            pipelineCacheUUID[3]:           uint8_t = 69
            pipelineCacheUUID[4]:           uint8_t = 120
            pipelineCacheUUID[5]:           uint8_t = 0
            pipelineCacheUUID[6]:           uint8_t = 126
            pipelineCacheUUID[7]:           uint8_t = 94
            pipelineCacheUUID[8]:           uint8_t = 79
            pipelineCacheUUID[9]:           uint8_t = 103
            pipelineCacheUUID[10]:          uint8_t = 0
            pipelineCacheUUID[11]:          uint8_t = 96
            pipelineCacheUUID[12]:          uint8_t = 64
            pipelineCacheUUID[13]:          uint8_t = 157
            pipelineCacheUUID[14]:          uint8_t = 142
            pipelineCacheUUID[15]:          uint8_t = 93
        limits:                         VkPhysicalDeviceLimits = 0x79fb75378408:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 65536
            sparseAddressSpaceSize:         VkDeviceSize = 1099511627776
            maxBoundDescriptorSets:         uint32_t = 32
            maxPerStageDescriptorSamplers:  uint32_t = 1048576
            maxPerStageDescriptorUniformBuffers: uint32_t = 15
            maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorSampledImages: uint32_t = 1048576
            maxPerStageDescriptorStorageImages: uint32_t = 1048576
            maxPerStageDescriptorInputAttachments: uint32_t = 1048576
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 1048576
            maxDescriptorSetUniformBuffers: uint32_t = 90
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetStorageBuffers: uint32_t = 1048576
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetSampledImages:  uint32_t = 1048576
            maxDescriptorSetStorageImages:  uint32_t = 1048576
            maxDescriptorSetInputAttachments: uint32_t = 1048576
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 4294967295
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 0x79fb753784e4
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 0x79fb753784f4
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x79fb75378520
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x79fb75378528
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32768
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x79fb753785c4
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 2047.94
            lineWidthRange:                 float[2] = 0x79fb753785cc
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 64
            pointSizeGranularity:           float = 0.0625
            lineWidthGranularity:           float = 0.0625
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x79fb75378600:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 1
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties(physicalDevice, pMemoryProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    pMemoryProperties:              VkPhysicalDeviceMemoryProperties* = 0x79fb75378618:
        memoryTypeCount:                uint32_t = 11
        memoryTypes:                    VkMemoryType[VK_MAX_MEMORY_TYPES] = 0x79fb7537861c
            memoryTypes[0]:                 VkMemoryType = 0x79fb7537861c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[1]:                 VkMemoryType = 0x79fb75378624:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[2]:                 VkMemoryType = 0x79fb7537862c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[3]:                 VkMemoryType = 0x79fb75378634:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[4]:                 VkMemoryType = 0x79fb7537863c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[5]:                 VkMemoryType = 0x79fb75378644:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[6]:                 VkMemoryType = 0x79fb7537864c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[7]:                 VkMemoryType = 0x79fb75378654:
                propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                heapIndex:                      uint32_t = 0
            memoryTypes[8]:                 VkMemoryType = 0x79fb7537865c:
                propertyFlags:                  VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[9]:                 VkMemoryType = 0x79fb75378664:
                propertyFlags:                  VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[10]:                VkMemoryType = 0x79fb7537866c:
                propertyFlags:                  VkMemoryPropertyFlags = 7 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 2
        memoryHeapCount:                uint32_t = 3
        memoryHeaps:                    VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 0x79fb75378720
            memoryHeaps[0]:                 VkMemoryHeap = 0x79fb75378720:
                size:                           VkDeviceSize = 4294967296
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
            memoryHeaps[1]:                 VkMemoryHeap = 0x79fb75378730:
                size:                           VkDeviceSize = 6146420736
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[2]:                 VkMemoryHeap = 0x79fb75378740:
                size:                           VkDeviceSize = 257949696
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties2KHR(physicalDevice, pMemoryProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    pMemoryProperties:              VkPhysicalDeviceMemoryProperties2* = 0x79fb7b3fe210:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2 (1000059006)
        pNext:                          void* = VkPhysicalDeviceMemoryBudgetPropertiesEXT
        memoryProperties:               VkPhysicalDeviceMemoryProperties = 0x79fb7b3fe220:
            memoryTypeCount:                uint32_t = 11
            memoryTypes:                    VkMemoryType[VK_MAX_MEMORY_TYPES] = 0x79fb7b3fe224
                memoryTypes[0]:                 VkMemoryType = 0x79fb7b3fe224:
                    propertyFlags:                  VkMemoryPropertyFlags = 0
                    heapIndex:                      uint32_t = 1
                memoryTypes[1]:                 VkMemoryType = 0x79fb7b3fe22c:
                    propertyFlags:                  VkMemoryPropertyFlags = 0
                    heapIndex:                      uint32_t = 1
                memoryTypes[2]:                 VkMemoryType = 0x79fb7b3fe234:
                    propertyFlags:                  VkMemoryPropertyFlags = 0
                    heapIndex:                      uint32_t = 1
                memoryTypes[3]:                 VkMemoryType = 0x79fb7b3fe23c:
                    propertyFlags:                  VkMemoryPropertyFlags = 0
                    heapIndex:                      uint32_t = 1
                memoryTypes[4]:                 VkMemoryType = 0x79fb7b3fe244:
                    propertyFlags:                  VkMemoryPropertyFlags = 0
                    heapIndex:                      uint32_t = 1
                memoryTypes[5]:                 VkMemoryType = 0x79fb7b3fe24c:
                    propertyFlags:                  VkMemoryPropertyFlags = 0
                    heapIndex:                      uint32_t = 1
                memoryTypes[6]:                 VkMemoryType = 0x79fb7b3fe254:
                    propertyFlags:                  VkMemoryPropertyFlags = 0
                    heapIndex:                      uint32_t = 1
                memoryTypes[7]:                 VkMemoryType = 0x79fb7b3fe25c:
                    propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                    heapIndex:                      uint32_t = 0
                memoryTypes[8]:                 VkMemoryType = 0x79fb7b3fe264:
                    propertyFlags:                  VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                    heapIndex:                      uint32_t = 1
                memoryTypes[9]:                 VkMemoryType = 0x79fb7b3fe26c:
                    propertyFlags:                  VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                    heapIndex:                      uint32_t = 1
                memoryTypes[10]:                VkMemoryType = 0x79fb7b3fe274:
                    propertyFlags:                  VkMemoryPropertyFlags = 7 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                    heapIndex:                      uint32_t = 2
            memoryHeapCount:                uint32_t = 3
            memoryHeaps:                    VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 0x79fb7b3fe328
                memoryHeaps[0]:                 VkMemoryHeap = 0x79fb7b3fe328:
                    size:                           VkDeviceSize = 4294967296
                    flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
                memoryHeaps[1]:                 VkMemoryHeap = 0x79fb7b3fe338:
                    size:                           VkDeviceSize = 6146420736
                    flags:                          VkMemoryHeapFlags = 0
                memoryHeaps[2]:                 VkMemoryHeap = 0x79fb7b3fe348:
                    size:                           VkDeviceSize = 257949696
                    flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
        pNext:                          VkPhysicalDeviceMemoryBudgetPropertiesEXT = 0x79fb7b3fe100:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT (1000237000)
            pNext:                          void* = NULL
            heapBudget:                     VkDeviceSize[VK_MAX_MEMORY_HEAPS] = 0x79fb7b3fe110
                heapBudget[0]:                  VkDeviceSize = 4082040832
                heapBudget[1]:                  VkDeviceSize = 6146420736
                heapBudget[2]:                  VkDeviceSize = 253100032
            heapUsage:                      VkDeviceSize[VK_MAX_MEMORY_HEAPS] = 0x79fb7b3fe190
                heapUsage[0]:                   VkDeviceSize = 262144
                heapUsage[1]:                   VkDeviceSize = 3178496
                heapUsage[2]:                   VkDeviceSize = 4849664

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceCapabilitiesKHR(physicalDevice, surface, pSurfaceCapabilities) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    surface:                        VkSurfaceKHR = 0xfab64d0000000002
    pSurfaceCapabilities:           VkSurfaceCapabilitiesKHR* = 0x79fb75389620:
        minImageCount:                  uint32_t = 2
        maxImageCount:                  uint32_t = 8
        currentExtent:                  VkExtent2D = 0x79fb75389628:
            width:                          uint32_t = 1000
            height:                         uint32_t = 800
        minImageExtent:                 VkExtent2D = 0x79fb75389630:
            width:                          uint32_t = 1000
            height:                         uint32_t = 800
        maxImageExtent:                 VkExtent2D = 0x79fb75389638:
            width:                          uint32_t = 1000
            height:                         uint32_t = 800
        maxImageArrayLayers:            uint32_t = 1
        supportedTransforms:            VkSurfaceTransformFlagsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        currentTransform:               VkSurfaceTransformFlagBitsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        supportedCompositeAlpha:        VkCompositeAlphaFlagsKHR = 1 (VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR)
        supportedUsageFlags:            VkImageUsageFlags = 159 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT | VK_IMAGE_USAGE_STORAGE_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT | VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface, pSurfaceFormatCount, pSurfaceFormats) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    surface:                        VkSurfaceKHR = 0xfab64d0000000002
    pSurfaceFormatCount:            uint32_t* = 2
    pSurfaceFormats:                VkSurfaceFormatKHR* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface, pSurfaceFormatCount, pSurfaceFormats) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    surface:                        VkSurfaceKHR = 0xfab64d0000000002
    pSurfaceFormatCount:            uint32_t* = 2
    pSurfaceFormats:                VkSurfaceFormatKHR* = 0x79fb742ee3fc
        pSurfaceFormats[0]:             VkSurfaceFormatKHR = 0x79fb742ee3fc:
            format:                         VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
            colorSpace:                     VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
        pSurfaceFormats[1]:             VkSurfaceFormatKHR = 0x79fb742ee404:
            format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
            colorSpace:                     VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface, pPresentModeCount, pPresentModes) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    surface:                        VkSurfaceKHR = 0xfab64d0000000002
    pPresentModeCount:              uint32_t* = 2
    pPresentModes:                  VkPresentModeKHR* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface, pPresentModeCount, pPresentModes) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    surface:                        VkSurfaceKHR = 0xfab64d0000000002
    pPresentModeCount:              uint32_t* = 2
    pPresentModes:                  VkPresentModeKHR* = 0x79fb742ee3f0
        pPresentModes[0]:               VkPresentModeKHR = VK_PRESENT_MODE_FIFO_KHR (2)
        pPresentModes[1]:               VkPresentModeKHR = VK_PRESENT_MODE_IMMEDIATE_KHR (0)

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceCapabilitiesKHR(physicalDevice, surface, pSurfaceCapabilities) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    surface:                        VkSurfaceKHR = 0xfab64d0000000002
    pSurfaceCapabilities:           VkSurfaceCapabilitiesKHR* = 0x79fb75389620:
        minImageCount:                  uint32_t = 2
        maxImageCount:                  uint32_t = 8
        currentExtent:                  VkExtent2D = 0x79fb75389628:
            width:                          uint32_t = 1000
            height:                         uint32_t = 800
        minImageExtent:                 VkExtent2D = 0x79fb75389630:
            width:                          uint32_t = 1000
            height:                         uint32_t = 800
        maxImageExtent:                 VkExtent2D = 0x79fb75389638:
            width:                          uint32_t = 1000
            height:                         uint32_t = 800
        maxImageArrayLayers:            uint32_t = 1
        supportedTransforms:            VkSurfaceTransformFlagsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        currentTransform:               VkSurfaceTransformFlagBitsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        supportedCompositeAlpha:        VkCompositeAlphaFlagsKHR = 1 (VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR)
        supportedUsageFlags:            VkImageUsageFlags = 159 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT | VK_IMAGE_USAGE_STORAGE_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT | VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT)

Thread 0, Frame 0:
vkCreateCommandPool(device, pCreateInfo, pAllocator, pCommandPool) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkCommandPoolCreateInfo* = 0x79fb742ee3f8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO (39)
        pNext:                          const void* = NULL
        flags:                          VkCommandPoolCreateFlags = 3 (VK_COMMAND_POOL_CREATE_TRANSIENT_BIT | VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT)
        queueFamilyIndex:               uint32_t = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pCommandPool:                   VkCommandPool* = 0xfa21a40000000003

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe420:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_COMMAND_POOL (25)
        objectHandle:                   uint64_t = 18023867503620390915
        pObjectName:                    const char* = ""

Thread 0, Frame 0:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pAllocateInfo:                  const VkCommandBufferAllocateInfo* = 0x79fb742ee3f0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
        pNext:                          const void* = NULL
        commandPool:                    VkCommandPool = 0xfa21a40000000003 []
        level:                          VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
        commandBufferCount:             uint32_t = 3
    pCommandBuffers:                VkCommandBuffer* = 0x79fb742ee3d8
        pCommandBuffers[0]:             VkCommandBuffer = 0x79fb753a6460
        pCommandBuffers[1]:             VkCommandBuffer = 0x79fb753aa990
        pCommandBuffers[2]:             VkCommandBuffer = 0x79fb753adf00

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe4a0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_COMMAND_BUFFER (6)
        objectHandle:                   uint64_t = 134120910513248
        pObjectName:                    const char* = "Drawing"

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe4a0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_COMMAND_BUFFER (6)
        objectHandle:                   uint64_t = 134120910530960
        pObjectName:                    const char* = "Drawing"

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe4a0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_COMMAND_BUFFER (6)
        objectHandle:                   uint64_t = 134120910544640
        pObjectName:                    const char* = "Drawing"

Thread 0, Frame 0:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkFenceCreateInfo* = 0x79fb742ee3f8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
        pNext:                          const void* = NULL
        flags:                          VkFenceCreateFlags = 1 (VK_FENCE_CREATE_SIGNALED_BIT)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFence:                         VkFence* = 0xf56c9b0000000004

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe3b0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_FENCE (7)
        objectHandle:                   uint64_t = 17684680261079400452
        pObjectName:                    const char* = "CommandFence-0"

Thread 0, Frame 0:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkFenceCreateInfo* = 0x79fb742ee3f8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
        pNext:                          const void* = NULL
        flags:                          VkFenceCreateFlags = 1 (VK_FENCE_CREATE_SIGNALED_BIT)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFence:                         VkFence* = 0xe7f79a0000000005

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe3b0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_FENCE (7)
        objectHandle:                   uint64_t = 16714997866799562757
        pObjectName:                    const char* = "CommandFence-1"

Thread 0, Frame 0:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkFenceCreateInfo* = 0x79fb742ee3f8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
        pNext:                          const void* = NULL
        flags:                          VkFenceCreateFlags = 1 (VK_FENCE_CREATE_SIGNALED_BIT)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFence:                         VkFence* = 0xf443490000000006

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe3b0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_FENCE (7)
        objectHandle:                   uint64_t = 17600992033042857990
        pObjectName:                    const char* = "CommandFence-2"

Thread 0, Frame 0:
vkCreatePipelineLayout(device, pCreateInfo, pAllocator, pPipelineLayout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkPipelineLayoutCreateInfo* = 0x79fb742ee3e0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO (30)
        pNext:                          const void* = NULL
        flags:                          VkPipelineLayoutCreateFlags = 0
        setLayoutCount:                 uint32_t = 0
        pSetLayouts:                    const VkDescriptorSetLayout* = 0x79fb742ee3e0
        pushConstantRangeCount:         uint32_t = 0
        pPushConstantRanges:            const VkPushConstantRange* = NULL
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pPipelineLayout:                VkPipelineLayout* = 0xcb3ee80000000007

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe490:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_PIPELINE_LAYOUT (17)
        objectHandle:                   uint64_t = 14645398124953075719
        pObjectName:                    const char* = "DrawingLayout"

Thread 0, Frame 0:
vkCreateRenderPass(device, pCreateInfo, pAllocator, pRenderPass) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkRenderPassCreateInfo* = 0x79fb742ee338:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO (38)
        pNext:                          const void* = NULL
        flags:                          VkRenderPassCreateFlags = 0
        attachmentCount:                uint32_t = 1
        pAttachments:                   const VkAttachmentDescription* = 0x79fb742ee3ec
            pAttachments[0]:                const VkAttachmentDescription = 0x79fb742ee3ec:
                flags:                          VkAttachmentDescriptionFlags = 0
                format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
                samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
                loadOp:                         VkAttachmentLoadOp = VK_ATTACHMENT_LOAD_OP_CLEAR (1)
                storeOp:                        VkAttachmentStoreOp = VK_ATTACHMENT_STORE_OP_STORE (0)
                stencilLoadOp:                  VkAttachmentLoadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE (2)
                stencilStoreOp:                 VkAttachmentStoreOp = VK_ATTACHMENT_STORE_OP_DONT_CARE (1)
                initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                finalLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
        subpassCount:                   uint32_t = 1
        pSubpasses:                     const VkSubpassDescription* = 0x79fb742ee398
            pSubpasses[0]:                  const VkSubpassDescription = 0x79fb742ee398:
                flags:                          VkSubpassDescriptionFlags = 0
                pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
                inputAttachmentCount:           uint32_t = 0
                pInputAttachments:              const VkAttachmentReference* = NULL
                colorAttachmentCount:           uint32_t = 1
                pColorAttachments:              const VkAttachmentReference* = 0x79fb742ee3e4
                    pColorAttachments[0]:           const VkAttachmentReference = 0x79fb742ee3e4:
                        attachment:                     uint32_t = 0
                        layout:                         VkImageLayout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL (2)
                pResolveAttachments:            const VkAttachmentReference* = NULL
                pDepthStencilAttachment:        const VkAttachmentReference* = NULL
                preserveAttachmentCount:        uint32_t = 0
                pPreserveAttachments:           const uint32_t* = NULL
        dependencyCount:                uint32_t = 1
        pDependencies:                  const VkSubpassDependency* = 0x79fb742ee37c
            pDependencies[0]:               const VkSubpassDependency = 0x79fb742ee37c:
                srcSubpass:                     uint32_t = 4294967295
                dstSubpass:                     uint32_t = 0
                srcStageMask:                   VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
                dstStageMask:                   VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
                srcAccessMask:                  VkAccessFlags = 0 (VK_ACCESS_NONE)
                dstAccessMask:                  VkAccessFlags = 256 (VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT)
                dependencyFlags:                VkDependencyFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pRenderPass:                    VkRenderPass* = 0xead9370000000008

Thread 0, Frame 0:
vkCreateShaderModule(device, pCreateInfo, pAllocator, pShaderModule) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkShaderModuleCreateInfo* = 0x79fb742ee3e8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO (16)
        pNext:                          const void* = NULL
        flags:                          VkShaderModuleCreateFlags = 0
        codeSize:                       size_t = 1080
        pCode:                          const uint32_t* = SHADER DATA
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pShaderModule:                  VkShaderModule* = 0xee647e0000000009

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe490:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_SHADER_MODULE (15)
        objectHandle:                   uint64_t = 17177993417163014153
        pObjectName:                    const char* = "TriangleVertices"

Thread 0, Frame 0:
vkCreateShaderModule(device, pCreateInfo, pAllocator, pShaderModule) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkShaderModuleCreateInfo* = 0x79fb742ee3e8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO (16)
        pNext:                          const void* = NULL
        flags:                          VkShaderModuleCreateFlags = 0
        codeSize:                       size_t = 568
        pCode:                          const uint32_t* = SHADER DATA
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pShaderModule:                  VkShaderModule* = 0xcfef35000000000a

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe490:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_SHADER_MODULE (15)
        objectHandle:                   uint64_t = 14983252759401201674
        pObjectName:                    const char* = "TriangleFragments"

Thread 0, Frame 0:
vkCreateGraphicsPipelines(device, pipelineCache, createInfoCount, pCreateInfos, pAllocator, pPipelines) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pipelineCache:                  VkPipelineCache = 0
    createInfoCount:                uint32_t = 1
    pCreateInfos:                   const VkGraphicsPipelineCreateInfo* = 0x79fb742ee320
        pCreateInfos[0]:                const VkGraphicsPipelineCreateInfo = 0x79fb742ee320:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO (28)
            pNext:                          const void* = NULL
            flags:                          VkPipelineCreateFlags = 0
            stageCount:                     uint32_t = 2
            pStages:                        const VkPipelineShaderStageCreateInfo* = 0x79fb742ee2c0
                pStages[0]:                     const VkPipelineShaderStageCreateInfo = 0x79fb742ee2c0:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO (18)
                    pNext:                          const void* = NULL
                    flags:                          VkPipelineShaderStageCreateFlags = 0
                    stage:                          VkShaderStageFlagBits = 1 (VK_SHADER_STAGE_VERTEX_BIT)
                    module:                         VkShaderModule = 0xee647e0000000009 [TriangleVertices]
                    pName:                          const char* = "main"
                    pSpecializationInfo:            const VkSpecializationInfo* = NULL
                pStages[1]:                     const VkPipelineShaderStageCreateInfo = 0x79fb742ee2f0:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO (18)
                    pNext:                          const void* = NULL
                    flags:                          VkPipelineShaderStageCreateFlags = 0
                    stage:                          VkShaderStageFlagBits = 16 (VK_SHADER_STAGE_FRAGMENT_BIT)
                    module:                         VkShaderModule = 0xcfef35000000000a [TriangleFragments]
                    pName:                          const char* = "main"
                    pSpecializationInfo:            const VkSpecializationInfo* = NULL
            pVertexInputState:              const VkPipelineVertexInputStateCreateInfo* = 0x79fb742ee3b0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO (19)
                pNext:                          const void* = NULL
                flags:                          VkPipelineVertexInputStateCreateFlags = 0
                vertexBindingDescriptionCount:  uint32_t = 1
                pVertexBindingDescriptions:     const VkVertexInputBindingDescription* = 0x79fb742ee404
                    pVertexBindingDescriptions[0]:  const VkVertexInputBindingDescription = 0x79fb742ee404:
                        binding:                        uint32_t = 0
                        stride:                         uint32_t = 20
                        inputRate:                      VkVertexInputRate = VK_VERTEX_INPUT_RATE_VERTEX (0)
                vertexAttributeDescriptionCount: uint32_t = 2
                pVertexAttributeDescriptions:   const VkVertexInputAttributeDescription* = 0x79fb742ee3e4
                    pVertexAttributeDescriptions[0]: const VkVertexInputAttributeDescription = 0x79fb742ee3e4:
                        location:                       uint32_t = 0
                        binding:                        uint32_t = 0
                        format:                         VkFormat = VK_FORMAT_R32G32_SFLOAT (103)
                        offset:                         uint32_t = 0
                    pVertexAttributeDescriptions[1]: const VkVertexInputAttributeDescription = 0x79fb742ee3f4:
                        location:                       uint32_t = 1
                        binding:                        uint32_t = 0
                        format:                         VkFormat = VK_FORMAT_R32G32B32_SFLOAT (106)
                        offset:                         uint32_t = 8
            pInputAssemblyState:            const VkPipelineInputAssemblyStateCreateInfo* = 0x79fb742ee290:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO (20)
                pNext:                          const void* = NULL
                flags:                          VkPipelineInputAssemblyStateCreateFlags = 0
                topology:                       VkPrimitiveTopology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST (3)
                primitiveRestartEnable:         VkBool32 = 0
            pTessellationState:             const VkPipelineTessellationStateCreateInfo* = NULL
            pViewportState:                 const VkPipelineViewportStateCreateInfo* = 0x79fb742ee260:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO (22)
                pNext:                          const void* = NULL
                flags:                          VkPipelineViewportStateCreateFlags = 0
                viewportCount:                  uint32_t = 1
                pViewports:                     const VkViewport* = UNUSED
                scissorCount:                   uint32_t = 1
                pScissors:                      const VkRect2D* = UNUSED
            pRasterizationState:            const VkPipelineRasterizationStateCreateInfo* = 0x79fb742ee220:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO (23)
                pNext:                          const void* = NULL
                flags:                          VkPipelineRasterizationStateCreateFlags = 0
                depthClampEnable:               VkBool32 = 0
                rasterizerDiscardEnable:        VkBool32 = 0
                polygonMode:                    VkPolygonMode = VK_POLYGON_MODE_FILL (0)
                cullMode:                       VkCullModeFlags = 0 (VK_CULL_MODE_NONE)
                frontFace:                      VkFrontFace = VK_FRONT_FACE_COUNTER_CLOCKWISE (0)
                depthBiasEnable:                VkBool32 = 0
                depthBiasConstantFactor:        float = 0
                depthBiasClamp:                 float = 0
                depthBiasSlopeFactor:           float = 0
                lineWidth:                      float = 1
            pMultisampleState:              const VkPipelineMultisampleStateCreateInfo* = 0x79fb742ee1f0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO (24)
                pNext:                          const void* = NULL
                flags:                          VkPipelineMultisampleStateCreateFlags = 0
                rasterizationSamples:           VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
                sampleShadingEnable:            VkBool32 = 0
                minSampleShading:               float = 0
                pSampleMask:                    const VkSampleMask* = NULL
                alphaToCoverageEnable:          VkBool32 = 0
                alphaToOneEnable:               VkBool32 = 0
            pDepthStencilState:             const VkPipelineDepthStencilStateCreateInfo* = 0x79fb742ee188:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO (25)
                pNext:                          const void* = NULL
                flags:                          VkPipelineDepthStencilStateCreateFlags = 0
                depthTestEnable:                VkBool32 = 0
                depthWriteEnable:               VkBool32 = 0
                depthCompareOp:                 VkCompareOp = VK_COMPARE_OP_ALWAYS (7)
                depthBoundsTestEnable:          VkBool32 = 0
                stencilTestEnable:              VkBool32 = 0
                front:                          VkStencilOpState = 0x79fb742ee1b0:
                    failOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    passOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    depthFailOp:                    VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    compareOp:                      VkCompareOp = VK_COMPARE_OP_NEVER (0)
                    compareMask:                    uint32_t = 0
                    writeMask:                      uint32_t = 0
                    reference:                      uint32_t = 0
                back:                           VkStencilOpState = 0x79fb742ee1cc:
                    failOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    passOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    depthFailOp:                    VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    compareOp:                      VkCompareOp = VK_COMPARE_OP_NEVER (0)
                    compareMask:                    uint32_t = 0
                    writeMask:                      uint32_t = 0
                    reference:                      uint32_t = 0
                minDepthBounds:                 float = 0
                maxDepthBounds:                 float = 0
            pColorBlendState:               const VkPipelineColorBlendStateCreateInfo* = 0x79fb742ee130:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO (26)
                pNext:                          const void* = NULL
                flags:                          VkPipelineColorBlendStateCreateFlags = 0
                logicOpEnable:                  VkBool32 = 0
                logicOp:                        VkLogicOp = VK_LOGIC_OP_CLEAR (0)
                attachmentCount:                uint32_t = 1
                pAttachments:                   const VkPipelineColorBlendAttachmentState* = 0x79fb742ee168
                    pAttachments[0]:                const VkPipelineColorBlendAttachmentState = 0x79fb742ee168:
                        blendEnable:                    VkBool32 = 0
                        srcColorBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        dstColorBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        colorBlendOp:                   VkBlendOp = VK_BLEND_OP_ADD (0)
                        srcAlphaBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        dstAlphaBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        alphaBlendOp:                   VkBlendOp = VK_BLEND_OP_ADD (0)
                        colorWriteMask:                 VkColorComponentFlags = 15 (VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT | VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT)
                blendConstants:                 float[4] = 0x79fb742ee158
                    blendConstants[0]:              float = 0
                    blendConstants[1]:              float = 0
                    blendConstants[2]:              float = 0
                    blendConstants[3]:              float = 0
            pDynamicState:                  const VkPipelineDynamicStateCreateInfo* = 0x79fb742ee110:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO (27)
                pNext:                          const void* = NULL
                flags:                          VkPipelineDynamicStateCreateFlags = 0
                dynamicStateCount:              uint32_t = 2
                pDynamicStates:                 const VkDynamicState* = 0x79fb742ee108
                    pDynamicStates[0]:              const VkDynamicState = VK_DYNAMIC_STATE_VIEWPORT (0)
                    pDynamicStates[1]:              const VkDynamicState = VK_DYNAMIC_STATE_SCISSOR (1)
            layout:                         VkPipelineLayout = 0xcb3ee80000000007 [DrawingLayout]
            renderPass:                     VkRenderPass = 0xead9370000000008
            subpass:                        uint32_t = 0
            basePipelineHandle:             VkPipeline = 0
            basePipelineIndex:              int32_t = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pPipelines:                     VkPipeline* = 0x79fb742ee100
        pPipelines[0]:                  VkPipeline = 0xec4bec000000000b

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe4b0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_PIPELINE (19)
        objectHandle:                   uint64_t = 17026962300948447243
        pObjectName:                    const char* = "TrianglePipeline"

Thread 0, Frame 0:
vkDestroyShaderModule(device, shaderModule, pAllocator) returns void:
    device:                         VkDevice = 0x79fb751e6620
    shaderModule:                   VkShaderModule = 0xee647e0000000009 [TriangleVertices]
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyShaderModule(device, shaderModule, pAllocator) returns void:
    device:                         VkDevice = 0x79fb751e6620
    shaderModule:                   VkShaderModule = 0xcfef35000000000a [TriangleFragments]
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkBufferCreateInfo* = 0x79fb742ee3d8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 60
        usage:                          VkBufferUsageFlags = 128 (VK_BUFFER_USAGE_VERTEX_BUFFER_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 0xe88693000000000c

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2KHR(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x79fb751e6620
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 0x79fb7b3fe450:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 0xe88693000000000c
    pMemoryRequirements:            VkMemoryRequirements2* = 0x79fb7b3fe490:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = VkMemoryDedicatedRequirements
        memoryRequirements:             VkMemoryRequirements = 0x79fb7b3fe4a0:
            size:                           VkDeviceSize = 64
            alignment:                      VkDeviceSize = 16
            memoryTypeBits:                 uint32_t = 1921
        pNext:                          VkMemoryDedicatedRequirements = 0x79fb7b3fe470:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS (1000127000)
            pNext:                          void* = NULL
            prefersDedicatedAllocation:     VkBool32 = 0
            requiresDedicatedAllocation:    VkBool32 = 0

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 0x79fb7b3fe250:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 33554432
        memoryTypeIndex:                uint32_t = 9
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 0xcad092000000000d

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    memory:                         VkDeviceMemory = 0xcad092000000000d
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 18446744073709551615
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 0x79facd600000

Thread 0, Frame 0:
vkBindBufferMemory(device, buffer, memory, memoryOffset) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    buffer:                         VkBuffer = 0xe88693000000000c
    memory:                         VkDeviceMemory = 0xcad092000000000d
    memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe490:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_BUFFER (9)
        objectHandle:                   uint64_t = 16755241091887792140
        pObjectName:                    const char* = "TriangleVertices"

acquire...17411852005
Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceCapabilitiesKHR(physicalDevice, surface, pSurfaceCapabilities) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x79fb7505bf90
    surface:                        VkSurfaceKHR = 0xfab64d0000000002
    pSurfaceCapabilities:           VkSurfaceCapabilitiesKHR* = 0x79fb75389620:
        minImageCount:                  uint32_t = 2
        maxImageCount:                  uint32_t = 8
        currentExtent:                  VkExtent2D = 0x79fb75389628:
            width:                          uint32_t = 1000
            height:                         uint32_t = 800
        minImageExtent:                 VkExtent2D = 0x79fb75389630:
            width:                          uint32_t = 1000
            height:                         uint32_t = 800
        maxImageExtent:                 VkExtent2D = 0x79fb75389638:
            width:                          uint32_t = 1000
            height:                         uint32_t = 800
        maxImageArrayLayers:            uint32_t = 1
        supportedTransforms:            VkSurfaceTransformFlagsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        currentTransform:               VkSurfaceTransformFlagBitsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        supportedCompositeAlpha:        VkCompositeAlphaFlagsKHR = 1 (VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR)
        supportedUsageFlags:            VkImageUsageFlags = 159 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT | VK_IMAGE_USAGE_STORAGE_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT | VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT)

Thread 0, Frame 0:
vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, pSwapchain) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkSwapchainCreateInfoKHR* = 0x79fb742ee3a8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR (1000001000)
        pNext:                          const void* = NULL
        flags:                          VkSwapchainCreateFlagsKHR = 0
        surface:                        VkSurfaceKHR = 0xfab64d0000000002
        minImageCount:                  uint32_t = 2
        imageFormat:                    VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
        imageColorSpace:                VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
        imageExtent:                    VkExtent2D = 0x79fb742ee3d4:
            width:                          uint32_t = 1000
            height:                         uint32_t = 800
        imageArrayLayers:               uint32_t = 1
        imageUsage:                     VkImageUsageFlags = 16 (VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT)
        imageSharingMode:               VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        preTransform:                   VkSurfaceTransformFlagBitsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        compositeAlpha:                 VkCompositeAlphaFlagBitsKHR = 1 (VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR)
        presentMode:                    VkPresentModeKHR = VK_PRESENT_MODE_FIFO_KHR (2)
        clipped:                        VkBool32 = 1
        oldSwapchain:                   VkSwapchainKHR = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSwapchain:                     VkSwapchainKHR* = 0x967dd1000000000e

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe320:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_SWAPCHAIN_KHR (1000001000)
        objectHandle:                   uint64_t = 10844053275708227598
        pObjectName:                    const char* = "Swapchain-HelloTriangle1"

Thread 0, Frame 0:
vkGetSwapchainImagesKHR(device, swapchain, pSwapchainImageCount, pSwapchainImages) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    swapchain:                      VkSwapchainKHR = 0x967dd1000000000e [Swapchain-HelloTriangle1]
    pSwapchainImageCount:           uint32_t* = 2
    pSwapchainImages:               VkImage* = NULL

Thread 0, Frame 0:
vkGetSwapchainImagesKHR(device, swapchain, pSwapchainImageCount, pSwapchainImages) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    swapchain:                      VkSwapchainKHR = 0x967dd1000000000e [Swapchain-HelloTriangle1]
    pSwapchainImageCount:           uint32_t* = 2
    pSwapchainImages:               VkImage* = 0x79fb742ee340
        pSwapchainImages[0]:            VkImage = 0xe7e6d0000000000f
        pSwapchainImages[1]:            VkImage = 0xd5b26f0000000010

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe230:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 16710272165823381519
        pObjectName:                    const char* = "SwapchainImage-HelloTriangle0"

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkImageViewCreateInfo* = 0x79fb742ee2a8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 0xe7e6d0000000000f [SwapchainImage-HelloTriangle0]
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
        components:                     VkComponentMapping = 0x79fb742ee2d0:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 0x79fb742ee2e0:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 0x980f360000000011

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe0c0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 10957035792043606033
        pObjectName:                    const char* = "SwapchainView-HelloTriangle0"

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe230:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 15398492121723830288
        pObjectName:                    const char* = "SwapchainImage-HelloTriangle1"

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkImageViewCreateInfo* = 0x79fb742ee260:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 0xd5b26f0000000010 [SwapchainImage-HelloTriangle1]
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
        components:                     VkComponentMapping = 0x79fb742ee288:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 0x79fb742ee298:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 0xdcc8fd0000000012

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe0c0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 15909243860128104466
        pObjectName:                    const char* = "SwapchainView-HelloTriangle1"

acquire...1: 17411852026
Thread 0, Frame 0:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkFenceCreateInfo* = 0x79fb742ee3f8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
        pNext:                          const void* = NULL
        flags:                          VkFenceCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFence:                         VkFence* = 0xd175b40000000013

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe280:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_FENCE (7)
        objectHandle:                   uint64_t = 15093167638295085075
        pObjectName:                    const char* = "AcquireFence-HelloTriangle-16071627672371"

Thread 0, Frame 0:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkSemaphoreCreateInfo* = 0x79fb742ee3f8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:                          const void* = NULL
        flags:                          VkSemaphoreCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSemaphore:                     VkSemaphore* = 0x9fde6b0000000014

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe300:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_SEMAPHORE (5)
        objectHandle:                   uint64_t = 11519762544604479508
        pObjectName:                    const char* = "AcquireSemaphore-HelloTriangle-16071628211166"

Thread 0, Frame 0:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    swapchain:                      VkSwapchainKHR = 0x967dd1000000000e [Swapchain-HelloTriangle1]
    timeout:                        uint64_t = 1000000000
    semaphore:                      VkSemaphore = 0x9fde6b0000000014 [AcquireSemaphore-HelloTriangle-16071628211166]
    fence:                          VkFence = 0xd175b40000000013 [AcquireFence-HelloTriangle-16071627672371]
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 0:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkSemaphoreCreateInfo* = 0x79fb742ee3f0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:                          const void* = NULL
        flags:                          VkSemaphoreCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSemaphore:                     VkSemaphore* = 0xdd3a8a0000000015

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe300:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_SEMAPHORE (5)
        objectHandle:                   uint64_t = 15941205563635925013
        pObjectName:                    const char* = "PresentSemaphore-HelloTriangle-16071629517007"

Thread 0, Frame 0:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    fence:                          VkFence = 0xd175b40000000013 [AcquireFence-HelloTriangle-16071627672371]

aquireed1: 17411852026
acquired17411852026
Thread 0, Frame 0:
vkCreateFramebuffer(device, pCreateInfo, pAllocator, pFramebuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkFramebufferCreateInfo* = 0x79fb742ee3d0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO (37)
        pNext:                          const void* = NULL
        flags:                          VkFramebufferCreateFlags = 0
        renderPass:                     VkRenderPass = 0xead9370000000008
        attachmentCount:                uint32_t = 1
        pAttachments:                   const VkImageView* = 0x79fb742ee3c8
            pAttachments[0]:                const VkImageView = 0x980f360000000011 [SwapchainView-HelloTriangle0]
        width:                          uint32_t = 1000
        height:                         uint32_t = 800
        layers:                         uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFramebuffer:                   VkFramebuffer* = 0xd897d90000000016

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe310:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_FRAMEBUFFER (24)
        objectHandle:                   uint64_t = 15607181627698970646
        pObjectName:                    const char* = "TriangleFramebuffer"

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 0x79fb742ee408
        pFences[0]:                     const VkFence = 0xf56c9b0000000004 [CommandFence-0]

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x79fb753a6460 [Drawing]
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 0x79fb742ee3f0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdBeginRenderPass(commandBuffer, pRenderPassBegin, contents) returns void:
    commandBuffer:                  VkCommandBuffer = 0x79fb753a6460 [Drawing]
    pRenderPassBegin:               const VkRenderPassBeginInfo* = 0x79fb742ee390:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO (43)
        pNext:                          const void* = NULL
        renderPass:                     VkRenderPass = 0xead9370000000008
        framebuffer:                    VkFramebuffer = 0xd897d90000000016 [TriangleFramebuffer]
        renderArea:                     VkRect2D = 0x79fb742ee3b0:
            offset:                         VkOffset2D = 0x79fb742ee3b0:
                x:                              int32_t = 0
                y:                              int32_t = 0
            extent:                         VkExtent2D = 0x79fb742ee3b8:
                width:                          uint32_t = 1000
                height:                         uint32_t = 800
        clearValueCount:                uint32_t = 1
        pClearValues:                   const VkClearValue* = 0x79fb742ee3e0
            pClearValues[0]:                const VkClearValue = 0x79fb742ee3e0 (Union):
                color:                          VkClearColorValue = 0x79fb742ee3e0 (Union):
                    float32:                        float[4] = 0x79fb742ee3e0
                        float32[0]:                     float = 0.2
                        float32[1]:                     float = 0.2
                        float32[2]:                     float = 0.2
                        float32[3]:                     float = 1
                    int32:                          int32_t[4] = 0x79fb742ee3e0
                        int32[0]:                       int32_t = 1045220557
                        int32[1]:                       int32_t = 1045220557
                        int32[2]:                       int32_t = 1045220557
                        int32[3]:                       int32_t = 1065353216
                    uint32:                         uint32_t[4] = 0x79fb742ee3e0
                        uint32[0]:                      uint32_t = 1045220557
                        uint32[1]:                      uint32_t = 1045220557
                        uint32[2]:                      uint32_t = 1045220557
                        uint32[3]:                      uint32_t = 1065353216
                depthStencil:                   VkClearDepthStencilValue = 0x79fb742ee3e0:
                    depth:                          float = 0.2
                    stencil:                        uint32_t = 1045220557
    contents:                       VkSubpassContents = VK_SUBPASS_CONTENTS_INLINE (0)

Thread 0, Frame 0:
vkCmdSetViewport(commandBuffer, firstViewport, viewportCount, pViewports) returns void:
    commandBuffer:                  VkCommandBuffer = 0x79fb753a6460 [Drawing]
    firstViewport:                  uint32_t = 0
    viewportCount:                  uint32_t = 1
    pViewports:                     const VkViewport* = 0x79fb742ee378
        pViewports[0]:                  const VkViewport = 0x79fb742ee378:
            x:                              float = 0
            y:                              float = 0
            width:                          float = 1000
            height:                         float = 800
            minDepth:                       float = 0
            maxDepth:                       float = 1

Thread 0, Frame 0:
vkCmdSetScissor(commandBuffer, firstScissor, scissorCount, pScissors) returns void:
    commandBuffer:                  VkCommandBuffer = 0x79fb753a6460 [Drawing]
    firstScissor:                   uint32_t = 0
    scissorCount:                   uint32_t = 1
    pScissors:                      const VkRect2D* = 0x79fb742ee368
        pScissors[0]:                   const VkRect2D = 0x79fb742ee368:
            offset:                         VkOffset2D = 0x79fb742ee368:
                x:                              int32_t = 0
                y:                              int32_t = 0
            extent:                         VkExtent2D = 0x79fb742ee370:
                width:                          uint32_t = 1000
                height:                         uint32_t = 800

Thread 0, Frame 0:
vkCmdBindPipeline(commandBuffer, pipelineBindPoint, pipeline) returns void:
    commandBuffer:                  VkCommandBuffer = 0x79fb753a6460 [Drawing]
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
    pipeline:                       VkPipeline = 0xec4bec000000000b [TrianglePipeline]

Thread 0, Frame 0:
vkCmdBindVertexBuffers(commandBuffer, firstBinding, bindingCount, pBuffers, pOffsets) returns void:
    commandBuffer:                  VkCommandBuffer = 0x79fb753a6460 [Drawing]
    firstBinding:                   uint32_t = 0
    bindingCount:                   uint32_t = 1
    pBuffers:                       const VkBuffer* = 0x79fb742ee360
        pBuffers[0]:                    const VkBuffer = 0xe88693000000000c [TriangleVertices]
    pOffsets:                       const VkDeviceSize* = 0x79fb742ee358
        pOffsets[0]:                    const VkDeviceSize = 0

Thread 0, Frame 0:
vkCmdDraw(commandBuffer, vertexCount, instanceCount, firstVertex, firstInstance) returns void:
    commandBuffer:                  VkCommandBuffer = 0x79fb753a6460 [Drawing]
    vertexCount:                    uint32_t = 3
    instanceCount:                  uint32_t = 1
    firstVertex:                    uint32_t = 0
    firstInstance:                  uint32_t = 0

Thread 0, Frame 0:
vkCmdEndRenderPass(commandBuffer) returns void:
    commandBuffer:                  VkCommandBuffer = 0x79fb753a6460 [Drawing]

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x79fb753a6460 [Drawing]

Thread 0, Frame 0:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0x79fb752d5570
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0x79fb742ee310
        pSubmits[0]:                    const VkSubmitInfo = 0x79fb742ee310:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0x79fb742ee308
                pWaitSemaphores[0]:             const VkSemaphore = 0x9fde6b0000000014 [AcquireSemaphore-HelloTriangle-16071628211166]
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0x79fb742ee304
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0x79fb742ee2f8
                pCommandBuffers[0]:             const VkCommandBuffer = 0x79fb753a6460 [Drawing]
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0x79fb742ee2f0
                pSignalSemaphores[0]:           const VkSemaphore = 0xdd3a8a0000000015 [PresentSemaphore-HelloTriangle-16071629517007]
    fence:                          VkFence = 0xf56c9b0000000004 [CommandFence-0]

present...17411852026
before present... 17411852026
LEGACY SWAPCHAIN
before present: 17411852026
actual present...17411852026
Thread 0, Frame 0:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0x79fb752d5570
    pPresentInfo:                   const VkPresentInfoKHR* = 0x79fb742ee318:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0x79fb742ee310
            pWaitSemaphores[0]:             const VkSemaphore = 0xdd3a8a0000000015 [PresentSemaphore-HelloTriangle-16071629517007]
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0x79fb742ee308
            pSwapchains[0]:                 const VkSwapchainKHR = 0x967dd1000000000e [Swapchain-HelloTriangle1]
        pImageIndices:                  const uint32_t* = 0x79fb742ee304
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = 0x79fb742ee300
            pResults[0]:                    VkResult = VK_SUCCESS (0)

actual present: 17411852026
presented17411852026
FPS is 1
acquire...17411852026
acquire...1: 17411852026
Thread 0, Frame 1:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkFenceCreateInfo* = 0x79fb742ee3f8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
        pNext:                          const void* = NULL
        flags:                          VkFenceCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFence:                         VkFence* = 0x84c0580000000017

Thread 0, Frame 1:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe280:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_FENCE (7)
        objectHandle:                   uint64_t = 9565742365558177815
        pObjectName:                    const char* = "AcquireFence-HelloTriangle-16071661165643"

Thread 0, Frame 1:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkSemaphoreCreateInfo* = 0x79fb742ee3f8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:                          const void* = NULL
        flags:                          VkSemaphoreCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSemaphore:                     VkSemaphore* = 0xd10d270000000018

Thread 0, Frame 1:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe300:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_SEMAPHORE (5)
        objectHandle:                   uint64_t = 15063739209577660440
        pObjectName:                    const char* = "AcquireSemaphore-HelloTriangle-16071661448567"

Thread 0, Frame 1:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    swapchain:                      VkSwapchainKHR = 0x967dd1000000000e [Swapchain-HelloTriangle1]
    timeout:                        uint64_t = 1000000000
    semaphore:                      VkSemaphore = 0xd10d270000000018 [AcquireSemaphore-HelloTriangle-16071661448567]
    fence:                          VkFence = 0x84c0580000000017 [AcquireFence-HelloTriangle-16071661165643]
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 1:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkSemaphoreCreateInfo* = 0x79fb742ee3f0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:                          const void* = NULL
        flags:                          VkSemaphoreCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSemaphore:                     VkSemaphore* = 0x27d60e0000000019

Thread 0, Frame 1:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe300:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_SEMAPHORE (5)
        objectHandle:                   uint64_t = 2870497205658058777
        pObjectName:                    const char* = "PresentSemaphore-HelloTriangle-16071661575666"

Thread 0, Frame 1:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    fence:                          VkFence = 0x84c0580000000017 [AcquireFence-HelloTriangle-16071661165643]

aquireed1: 17411852026
acquired17411852026
Thread 0, Frame 1:
vkCreateFramebuffer(device, pCreateInfo, pAllocator, pFramebuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkFramebufferCreateInfo* = 0x79fb742ee3d0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO (37)
        pNext:                          const void* = NULL
        flags:                          VkFramebufferCreateFlags = 0
        renderPass:                     VkRenderPass = 0xead9370000000008
        attachmentCount:                uint32_t = 1
        pAttachments:                   const VkImageView* = 0x79fb742ee3c8
            pAttachments[0]:                const VkImageView = 0xdcc8fd0000000012 [SwapchainView-HelloTriangle1]
        width:                          uint32_t = 1000
        height:                         uint32_t = 800
        layers:                         uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFramebuffer:                   VkFramebuffer* = 0x95a125000000001a

Thread 0, Frame 1:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe310:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_FRAMEBUFFER (24)
        objectHandle:                   uint64_t = 10781939664831905818
        pObjectName:                    const char* = "TriangleFramebuffer"

Thread 0, Frame 1:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 0x79fb742ee408
        pFences[0]:                     const VkFence = 0xe7f79a0000000005 [CommandFence-1]

Thread 0, Frame 1:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x79fb753aa990 [Drawing]
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 0x79fb742ee3f0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 1:
vkCmdBeginRenderPass(commandBuffer, pRenderPassBegin, contents) returns void:
    commandBuffer:                  VkCommandBuffer = 0x79fb753aa990 [Drawing]
    pRenderPassBegin:               const VkRenderPassBeginInfo* = 0x79fb742ee390:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO (43)
        pNext:                          const void* = NULL
        renderPass:                     VkRenderPass = 0xead9370000000008
        framebuffer:                    VkFramebuffer = 0x95a125000000001a [TriangleFramebuffer]
        renderArea:                     VkRect2D = 0x79fb742ee3b0:
            offset:                         VkOffset2D = 0x79fb742ee3b0:
                x:                              int32_t = 0
                y:                              int32_t = 0
            extent:                         VkExtent2D = 0x79fb742ee3b8:
                width:                          uint32_t = 1000
                height:                         uint32_t = 800
        clearValueCount:                uint32_t = 1
        pClearValues:                   const VkClearValue* = 0x79fb742ee3e0
            pClearValues[0]:                const VkClearValue = 0x79fb742ee3e0 (Union):
                color:                          VkClearColorValue = 0x79fb742ee3e0 (Union):
                    float32:                        float[4] = 0x79fb742ee3e0
                        float32[0]:                     float = 0.2
                        float32[1]:                     float = 0.2
                        float32[2]:                     float = 0.2
                        float32[3]:                     float = 1
                    int32:                          int32_t[4] = 0x79fb742ee3e0
                        int32[0]:                       int32_t = 1045220557
                        int32[1]:                       int32_t = 1045220557
                        int32[2]:                       int32_t = 1045220557
                        int32[3]:                       int32_t = 1065353216
                    uint32:                         uint32_t[4] = 0x79fb742ee3e0
                        uint32[0]:                      uint32_t = 1045220557
                        uint32[1]:                      uint32_t = 1045220557
                        uint32[2]:                      uint32_t = 1045220557
                        uint32[3]:                      uint32_t = 1065353216
                depthStencil:                   VkClearDepthStencilValue = 0x79fb742ee3e0:
                    depth:                          float = 0.2
                    stencil:                        uint32_t = 1045220557
    contents:                       VkSubpassContents = VK_SUBPASS_CONTENTS_INLINE (0)

Thread 0, Frame 1:
vkCmdSetViewport(commandBuffer, firstViewport, viewportCount, pViewports) returns void:
    commandBuffer:                  VkCommandBuffer = 0x79fb753aa990 [Drawing]
    firstViewport:                  uint32_t = 0
    viewportCount:                  uint32_t = 1
    pViewports:                     const VkViewport* = 0x79fb742ee378
        pViewports[0]:                  const VkViewport = 0x79fb742ee378:
            x:                              float = 0
            y:                              float = 0
            width:                          float = 1000
            height:                         float = 800
            minDepth:                       float = 0
            maxDepth:                       float = 1

Thread 0, Frame 1:
vkCmdSetScissor(commandBuffer, firstScissor, scissorCount, pScissors) returns void:
    commandBuffer:                  VkCommandBuffer = 0x79fb753aa990 [Drawing]
    firstScissor:                   uint32_t = 0
    scissorCount:                   uint32_t = 1
    pScissors:                      const VkRect2D* = 0x79fb742ee368
        pScissors[0]:                   const VkRect2D = 0x79fb742ee368:
            offset:                         VkOffset2D = 0x79fb742ee368:
                x:                              int32_t = 0
                y:                              int32_t = 0
            extent:                         VkExtent2D = 0x79fb742ee370:
                width:                          uint32_t = 1000
                height:                         uint32_t = 800

Thread 0, Frame 1:
vkCmdBindPipeline(commandBuffer, pipelineBindPoint, pipeline) returns void:
    commandBuffer:                  VkCommandBuffer = 0x79fb753aa990 [Drawing]
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
    pipeline:                       VkPipeline = 0xec4bec000000000b [TrianglePipeline]

Thread 0, Frame 1:
vkCmdBindVertexBuffers(commandBuffer, firstBinding, bindingCount, pBuffers, pOffsets) returns void:
    commandBuffer:                  VkCommandBuffer = 0x79fb753aa990 [Drawing]
    firstBinding:                   uint32_t = 0
    bindingCount:                   uint32_t = 1
    pBuffers:                       const VkBuffer* = 0x79fb742ee360
        pBuffers[0]:                    const VkBuffer = 0xe88693000000000c [TriangleVertices]
    pOffsets:                       const VkDeviceSize* = 0x79fb742ee358
        pOffsets[0]:                    const VkDeviceSize = 0

Thread 0, Frame 1:
vkCmdDraw(commandBuffer, vertexCount, instanceCount, firstVertex, firstInstance) returns void:
    commandBuffer:                  VkCommandBuffer = 0x79fb753aa990 [Drawing]
    vertexCount:                    uint32_t = 3
    instanceCount:                  uint32_t = 1
    firstVertex:                    uint32_t = 0
    firstInstance:                  uint32_t = 0

Thread 0, Frame 1:
vkCmdEndRenderPass(commandBuffer) returns void:
    commandBuffer:                  VkCommandBuffer = 0x79fb753aa990 [Drawing]

Thread 0, Frame 1:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x79fb753aa990 [Drawing]

Thread 0, Frame 1:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0x79fb752d5570
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0x79fb742ee310
        pSubmits[0]:                    const VkSubmitInfo = 0x79fb742ee310:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 1
            pWaitSemaphores:                const VkSemaphore* = 0x79fb742ee308
                pWaitSemaphores[0]:             const VkSemaphore = 0xd10d270000000018 [AcquireSemaphore-HelloTriangle-16071661448567]
            pWaitDstStageMask:              const VkPipelineStageFlags* = 0x79fb742ee304
                pWaitDstStageMask[0]:           const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0x79fb742ee2f8
                pCommandBuffers[0]:             const VkCommandBuffer = 0x79fb753aa990 [Drawing]
            signalSemaphoreCount:           uint32_t = 1
            pSignalSemaphores:              const VkSemaphore* = 0x79fb742ee2f0
                pSignalSemaphores[0]:           const VkSemaphore = 0x27d60e0000000019 [PresentSemaphore-HelloTriangle-16071661575666]
    fence:                          VkFence = 0xe7f79a0000000005 [CommandFence-1]

present...17411852026
before present... 17411852026
LEGACY SWAPCHAIN
before present: 17411852026
actual present...17411852026
Thread 0, Frame 1:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0x79fb752d5570
    pPresentInfo:                   const VkPresentInfoKHR* = 0x79fb742ee318:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 0x79fb742ee310
            pWaitSemaphores[0]:             const VkSemaphore = 0x27d60e0000000019 [PresentSemaphore-HelloTriangle-16071661575666]
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 0x79fb742ee308
            pSwapchains[0]:                 const VkSwapchainKHR = 0x967dd1000000000e [Swapchain-HelloTriangle1]
        pImageIndices:                  const uint32_t* = 0x79fb742ee304
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = 0x79fb742ee300
            pResults[0]:                    VkResult = VK_SUCCESS (0)

actual present: 17411852026
presented17411852026
acquire...17411852026
acquire...1: 17411852026
Thread 0, Frame 2:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkFenceCreateInfo* = 0x79fb742ee3f8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
        pNext:                          const void* = NULL
        flags:                          VkFenceCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFence:                         VkFence* = 0xcb1c7c000000001b

Thread 0, Frame 2:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe280:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_FENCE (7)
        objectHandle:                   uint64_t = 14635709228489113627
        pObjectName:                    const char* = "AcquireFence-HelloTriangle-16071663343834"

Thread 0, Frame 2:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkSemaphoreCreateInfo* = 0x79fb742ee3f8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:                          const void* = NULL
        flags:                          VkSemaphoreCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSemaphore:                     VkSemaphore* = 0x2cfba2000000001c

Thread 0, Frame 2:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe300:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_SEMAPHORE (5)
        objectHandle:                   uint64_t = 3241362477706903580
        pObjectName:                    const char* = "AcquireSemaphore-HelloTriangle-16071663709645"

Thread 0, Frame 2:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    swapchain:                      VkSwapchainKHR = 0x967dd1000000000e [Swapchain-HelloTriangle1]
    timeout:                        uint64_t = 1000000000
    semaphore:                      VkSemaphore = 0x2cfba2000000001c [AcquireSemaphore-HelloTriangle-16071663709645]
    fence:                          VkFence = 0xcb1c7c000000001b [AcquireFence-HelloTriangle-16071663343834]
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 2:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pCreateInfo:                    const VkSemaphoreCreateInfo* = 0x79fb742ee3f0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:                          const void* = NULL
        flags:                          VkSemaphoreCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSemaphore:                     VkSemaphore* = 0x908683000000001d

Thread 0, Frame 2:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 0x79fb7b3fe300:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_SEMAPHORE (5)
        objectHandle:                   uint64_t = 10414155224364089373
        pObjectName:                    const char* = "PresentSemaphore-HelloTriangle-16071663899214"

Thread 0, Frame 2:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    fence:                          VkFence = 0xcb1c7c000000001b [AcquireFence-HelloTriangle-16071663343834]

Thread 0, Frame 2:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x79fb751e6620
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 0x79fb742ee400
        pFences[0]:                     const VkFence = 0xf56c9b0000000004 [CommandFence-0]
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 1000000000

Thread 0, Frame 2:
vkDestroySemaphore(device, semaphore, pAllocator) returns void:
    device:                         VkDevice = 0x79fb751e6620
    semaphore:                      VkSemaphore = 0x9fde6b0000000014 [AcquireSemaphore-HelloTriangle-16071628211166]
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 2:
vkDestroySemaphore(device, semaphore, pAllocator) returns void:
    device:                         VkDevice = 0x79fb751e6620
    semaphore:                      VkSemaphore = 0xdd3a8a0000000015 [PresentSemaphore-HelloTriangle-16071629517007]
    pAllocator:                     const VkAllocationCallbacks* = NULL

Exception in thread "main" com.github.knokko.boiler.debug.ValidationException: Validation Error: [ VUID-vkDestroySemaphore-semaphore-05149 ] | MessageID = 0x93e24db1 | vkDestroySemaphore(): can't be called on VkSemaphore 0xdd3a8a0000000015[PresentSemaphore-HelloTriangle-16071629517007] that is currently in use by VkQueue 0x79fb752d5570[].
The Vulkan spec states: All submitted batches that refer to semaphore must have completed execution (https://vulkan.lunarg.com/doc/view/1.4.304.0/linux/1.4-extensions/vkspec.html#VUID-vkDestroySemaphore-semaphore-05149)
	at com.github.knokko.boiler.builders.BoilerBuilder.lambda$build$7(BoilerBuilder.java:669)
	at org.lwjgl.vulkan.VkDebugUtilsMessengerCallbackEXTI.callback(VkDebugUtilsMessengerCallbackEXTI.java:58)
	at org.lwjgl.system.JNI.callPJPV(Native Method)
	at org.lwjgl.vulkan.VK10.nvkDestroySemaphore(VK10.java:6429)
	at org.lwjgl.vulkan.VK10.vkDestroySemaphore(VK10.java:6477)
	at com.github.knokko.boiler.synchronization.SemaphoreBank.returnSemaphores(SemaphoreBank.java:79)
	at com.github.knokko.boiler.window.SwapchainCleaner.destroyImageNow(SwapchainCleaner.java:89)
	at com.github.knokko.boiler.window.LegacySwapchainCleaner.chooseRemainingImages(LegacySwapchainCleaner.java:22)
	at com.github.knokko.boiler.window.SwapchainCleaner.destroyOldResources(SwapchainCleaner.java:41)
	at com.github.knokko.boiler.window.SwapchainCleaner.onAcquire(SwapchainCleaner.java:32)
	at com.github.knokko.boiler.window.VkbSwapchain.acquireImage(VkbSwapchain.java:135)
	at com.github.knokko.boiler.window.VkbWindow.acquireSwapchainImage(VkbWindow.java:310)
	at com.github.knokko.boiler.window.VkbWindow.acquireSwapchainImageWithSemaphore(VkbWindow.java:118)
	at com.github.knokko.boiler.samples.HelloTriangle.main(HelloTriangle.java:212)

> Task :samples:com.github.knokko.boiler.samples.HelloTriangle.main() FAILED

Execution failed for task ':samples:com.github.knokko.boiler.samples.HelloTriangle.main()'.
> Process 'command '/usr/lib/jvm/java-21-openjdk-amd64/bin/java'' finished with non-zero exit value 1

* Try:
> Run with --stacktrace option to get the stack trace.
> Run with --info or --debug option to get more log output.
> Run with --scan to get full insights.
> Get more help at https://help.gradle.org.
BUILD FAILED in 3s
5 actionable tasks: 2 executed, 3 up-to-date


